{"version":3,"sources":["CoinCard.js","InactiveCoinCard.js","VirtualCoinList.js","CoinList.js","Home.js","CoinInfo.js","Inactive.js","Header.js","App.js","registerServiceWorker.js","index.js","Util.js"],"names":["Decimal","toFormat","_Decimal","directExchangeLinks","Kucoin","Cryptopia","Southxchange","TradeOgre","StocksExchange","Octaex","TradeSatoshi","Qryptos","Cryptohub","Livecoin","BTC-Alpha","Crex24","Palitanx","Altex","MapleChange","BitexLive","Kompler","BitexBay","BitexBook","Graviex","Bittrex","FirstCryptoBank","Primex","Escodex","Bisq","Raisex","Number","prototype","noExponents","data","String","this","split","length","z","sign","str","replace","mag","CoinCard","e","$","target","remove","_this$props","props","coin","showExtraDetails","react_default","a","createElement","elPairs","bestPair","template","_","exchangeName","bestPairLink","symbol","toUpperCase","pair","href","bestPairEl","activePairsEl","activePairs","activePairLinks","each","idx","activePairLink","push","key","map","elVolBtc","elVol","volumeBtc","btcVol","Util","millify","volume","coinVol","elBuyBtcUsd","elBuy","elBuyMeter","className","buyTotalBtcRaw","bc","buyColor","style","buyTotalBtc","buyTotalRaw","buyTotal","topSpace","headerClass","elHighPrice","pairPrice","pairEl","pairInBtcFormatted","pairInBtc","toNumber","toPrecision","pairInSatoshiFormatted","pairInSatoshi","toString","orders","uSatEl","mSatoshiParts","mSatoshi","nUsdParts","nUsd","altExchangeList","exchangeNames","exchangeList","_formatBtc","btc24","btc24Extra","btc24Formatted","x","indexOf","substring","y","formatBtc24","_formatUsd","usd24","usd24Extra","usd24Formatted","formatUsd24","exchangeElement","usdHuman","hash","coinsEarned","exchangeLink","rel","onExchange","cardBodyClass","asicFriendly","imgSrc","toLowerCase","btcTalk","bitcointalkAnn","announcementDate","coinLink","coinName","bgImage","backgroundImage","concat","updated","logUpdated","coinId","stale","isStale","title","algorithm","difficulty","networkHashrate","PureComponent","InactiveCoinCard","links","sortedArray","value","linkKey","linkValue","sortBy","generalLinks","link","linkText","capitalize","lastSeen","VirtualCoinList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderRow","bind","assertThisInitialized","updateDimensions","cache","CellMeasurerCache","defaultHeight","fixedWidth","state","colCount","list","_this2","index","_ref","parent","es","columnIndex","rowIndex","inactiveCoins","src_InactiveCoinCard","src_CoinCard","window","innerWidth","coinsChunked","chunk","coins","listRef","forceUpdateGrid","setState","addEventListener","removeEventListener","nextProps","nextState","_this3","clearAll","display","position","paddingRight","_ref2","height","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","_ref3","width","ref","overscanRowCount","noRowsRenderer","_noRowsRenderer","rowCount","deferredMeasurementCache","rowHeight","rowRenderer","autoHeight","onScroll","scrollToIndex","Component","CoinList","filterProps","filterCoins","handleSearch","coinElements","coinElementsFiltered","hiddenByAdvancedOptions","searchFilterText","undefined","get","activeAlgos","showTraded","buyTotalUsdRaw","parseFloat","minimumUsdBuyOrders","exActive","n","result","stateActiveExchanges","showUntraded","enabled","searchFilter","filter","newProps","_this4","_this$state","hiddenBySearch","coinsDisplay","tableStyle","cellStyle","verticalAlign","advancedOptionsFilterCountEl","id","type","placeholder","onChange","src_VirtualCoinList","Home","totalCoins","totalTradedCoins","parsedCoinData","latest","hourly","daily","weekly","monthly","changeTime","time","localStorage","sort","order","oldOrder","showAsic","showNonAsic","shownicehash","showNonnicehash","showAdvanced","cryptonight","cryptonight_lite","cryptonight_heavy","cryptonight_monero","cryptonight_v8","cryptonight_dark","cryptonight_upx","cryptonight_adaptive","cryptonight_moneroGpu","cryptonight_moneroCpu","cryptonight_aeon","cryptonight_alloy","cryptonight_haven","cryptonight_stellite","cryptonight_b2n","cryptonight_saber","cryptonight_fast","cryptonight_marketcash","cryptonight_arto","cryptonight_turtle","wild_keccak","Bitebtc","Finexbox","timeouts","algorithms","sortByHashrate","sortByProfit","sortByCoins","sortByNewest","toggleShowExtraDetails","toggleTradedCoins","toggleUntradedCoins","toggleAsicCoins","toggleNonAsicCoins","togglenicehashCoins","toggleNonnicehashCoins","updateHashrate","toggleAdvancedHash","updateMasterHashrate","handleSortChange","handleTimeChange","handleExchangeChange","updateMinimumUsdBuyOrders","toggleExchangesOff","toggleExchangesOn","newState","prevState","setItem","objectSpread","Date","getTime","updateActiveAlgos","text","coinDataPromise","fetch","then","res","neatCsv","latestDataPromise","dailyDataPromise","hourlyDataPromise","weeklyDataPromise","monthlyDataPromise","poolDataPromise","poolDataLatestPromise","Promise","all","values","coinDataRaw","generalCoinData","generalPoolData","latestPoolData","timeData","find","parsedCoin","getCoinData","latestCoinData","coinData","moneroGpu","val","moneroCpu","updateCoinData","options","_time","getItem","textContent","exchangeEnabled","clone","newExchangeState","activeCoinAlgos","toggleAlgo_cryptonight","toggleCoinAlgo","toggleAlgo_lite","toggleAlgo_heavy","toggleAlgo_monero","toggleAlgo_v8","toggleAlgo_dark","toggleAlgo_upx","toggleAlgo_adaptive","toggleAlgo_aeon","toggleAlgo_alloy","toggleAlgo_marketcash","toggleAlgo_arto","toggleAlgo_turtle","toggleAlgo_haven","toggleAlgo_stellite","toggleAlgo_b2n","toggleAlgo_saber","toggleAlgo_fast","toggleAlgo_keccak","showExtraDetailsClass","tradedActiveClass","untradedActiveClass","asicActiveClass","nonAsicActiveClass","nicehashActiveClass","nonnicehashActiveClass","advancedHashActiveClass","advancedHash","cryptonightActiveClass","liteActiveClass","heavyActiveClass","moneroActiveClass","v8ActiveClass","darkActiveClass","upxActiveClass","adaptiveActiveClass","aeonActiveClass","alloyActiveClass","marketcashActiveClass","artoActiveClass","turtleActiveClass","havenActiveClass","stelliteActiveClass","b2nActiveClass","saberActiveClass","fastActiveClass","keccakActiveClass","exchangeButtonsDom","exchangeButtonsDomTwo","ae","coinActiveExchanges","exchangeClass","exchangeEl","data-toggle","aria-pressed","autoComplete","onClick","src_CoinList","CoinInfo","match","params","name","exchangeData","poolInfoPromise","exchangePromise","o","coinLatestData","isUndefined","poolList","poolData","poolId","assign","poolElements","hashrate","miners","url","poolHeader","exchangeElements","exchangeIds","exchangeId","exchange","exchangeLinks","satoshiPrice","usdPrice","sellTotal","sellTotalBtc","created","join","toISOString","exchangeHeader","alt","src","onError","Inactive","inactiveDataPromise","extra","updatedRaw","coinA","coinB","Header","NavLink","exact","to","keydown","event","ctrlKey","keyCode","preventDefault","focus","Main","Switch","Route","path","component","App","src_Header","App_Main","Boolean","location","hostname","require","jQuery","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Utils","C_code_triforcecoin_tracker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","instance","getColorForPercentage","pct","num","Math","round","coinDataArray","staleTimeout","baseCoinData","moment","format","diffTarget","nhFriendly","exchanges","eval","btcPrice","times","networkHashrateRaw","satoshiValue","usdValue","fromNow","reward","diffRaw","toFixed","satoshiPriceRaw","coinValue","pairValue","buyTotalUsd","sellTotalRaw","logUpdatedRaw","toInteger","react__WEBPACK_IMPORTED_MODULE_4___default","exchangeListEl","div","theory","usd24Raw","btc24Raw","st","duration","humanize","coinsEarnedRaw","toDecimalPlaces","ROUND_UP","number","decimals","roundSF","floor","log10","pow","millnames","indicator","abs","millidx","max","min","roundStr","minus","reverse","b"],"mappings":"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","file":"static/js/main.f46e899f.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport $ from 'jquery';\r\nimport _ from 'lodash';\r\nimport Util from \"./Util\";\r\nimport { Decimal as _Decimal } from \"decimal.js\";\r\nimport toFormat from \"toformat\";\r\nconst Decimal = toFormat(_Decimal);\r\n// import { Link } from 'react-router-dom';\r\n\r\nvar directExchangeLinks = {\r\n  \"Kucoin\": \"https://www.kucoin.com/#/trade.pro/<%= symbol.toUpperCase() %>-<%= pair.toUpperCase() %>\",\r\n  \"Cryptopia\": \"https://www.cryptopia.co.nz/Exchange/?market=<%= symbol.toUpperCase() %>_<%= pair.toUpperCase() %>\",\r\n  \"Southxchange\": \"https://www.southxchange.com/Market/Book/<%= symbol.toUpperCase() %>/<%= pair.toUpperCase() %>\",\r\n  \"TradeOgre\": \"https://tradeogre.com/exchange/<%= pair.toUpperCase() %>-<%= symbol.toUpperCase() %>\",\r\n  \"StocksExchange\": \"https://app.stocks.exchange/en/basic-trade/pair/<%= pair.toUpperCase() %>/<%= symbol.toUpperCase() %>/1D\",\r\n  \"Octaex\": \"\",\r\n  \"TradeSatoshi\": \"https://tradesatoshi.com/Exchange/?market=<%= symbol.toUpperCase() %>_<%= pair.toUpperCase() %>\",\r\n  \"Qryptos\": \"\",\r\n  \"Cryptohub\": \"https://cryptohub.online/market/<%= symbol.toUpperCase() %>/\",\r\n  \"Livecoin\": \"https://www.livecoin.net/trade/index?currencyPair=<%= symbol.toUpperCase() %>%2F<%= pair.toUpperCase() %>\",\r\n  \"BTC-Alpha\": \"https://btc-alpha.com/exchange/<%= symbol.toUpperCase() %>_<%= pair.toUpperCase() %>/\",\r\n  \"Crex24\": \"https://crex24.com/exchange/<%= symbol.toUpperCase() %>-<%= pair.toUpperCase() %>\",\r\n  \"Palitanx\": \"\",\r\n  \"Altex\": \"\",\r\n  \"MapleChange\": \"https://maplechange.com/markets/<%= symbol.toLowerCase() %><%= pair.toLowerCase() %>\",\r\n  \"BitexLive\": \"https://bitexlive.com/exchange/<%= pair.toUpperCase() %>-<%= symbol.toUpperCase() %>\",\r\n  \"Kompler\": \"https://www.kompler.exchange/#/markets/<%= pair.toUpperCase() %>/<%= symbol.toUpperCase() %>\",\r\n  \"BitexBay\": \"https://www.bitexbay.com/Home/Orders/index/currency/<%= symbol.toUpperCase() %>-<%= pair.toUpperCase() %>.html\",\r\n  \"BitexBook\": \"https://bitexbook.com/trading/<%= pair.toLowerCase() %><%= symbol.toLowerCase() %>\",\r\n  \"Graviex\": \"https://graviex.net/markets/<%= symbol.toLowerCase() %><%= pair.toLowerCase() %>\",\r\n  \"Bittrex\": \"https://bittrex.com/Market/Index?MarketName=<%= pair.toUpperCase() %>-<%= symbol.toUpperCase() %>\",\r\n  \"FirstCryptoBank\": \"https://exfcb.com/\",\r\n  \"Primex\": \"https://primex.xyz/\",\r\n  \"Escodex\": \"http://escodex.com/\",\r\n  \"Bisq\": \"https://bisq.network/\",\r\n  \"Raisex\": \"https://raisex.io\",\r\n};\r\n\r\nfunction formatBtc24(btc24) {\r\n  var btc24Extra = <span></span>;\r\n  var btc24Formatted = btc24;\r\n  var x = btc24.indexOf('.');\r\n  if (x > -1) {\r\n    x = btc24.substring(x);\r\n    if (x.length > 8) {\r\n      var y = x.substring(9);\r\n      // console.log(y)\r\n      btc24Extra = <sup>{y}</sup>;\r\n      btc24Formatted = btc24.substring(0, btc24.indexOf('.') + 9);\r\n    }\r\n  }\r\n  return { btc24Formatted, btc24Extra };\r\n}\r\n\r\nfunction formatUsd24(usd24) {\r\n  var usd24Extra = <span></span>\r\n  var usd24Formatted = usd24;\r\n  var x = usd24.indexOf('.');\r\n  if (x > -1) {\r\n    x = usd24.substring(x);\r\n    if (x.length > 2) {\r\n      var y = x.substring(3);\r\n      usd24Extra = <sup>{y}</sup>;\r\n      usd24Formatted = usd24.substring(0, usd24.indexOf('.') + 3);\r\n    }\r\n  }\r\n\r\n  return { usd24Formatted, usd24Extra }\r\n}\r\n\r\n// eslint-disable-next-line\r\nNumber.prototype.noExponents = function() {\r\n  var data = String(this).split(/[eE]/);\r\n  if (data.length === 1) return data[0];\r\n\r\n  var z = \"\",\r\n    sign = this < 0 ? \"-\" : \"\",\r\n    str = data[0].replace(\".\", \"\"),\r\n    mag = Number(data[1]) + 1;\r\n\r\n  if (mag < 0) {\r\n    z = sign + \"0.\";\r\n    while (mag++)\r\n      z += \"0\";\r\n    // eslint-disable-next-line\r\n    return z + str.replace(/^\\-/, \"\");\r\n  }\r\n  mag -= str.length;\r\n  while (mag--)\r\n    z += \"0\";\r\n  return str + z;\r\n};\r\n\r\nclass CoinCard extends PureComponent {\r\n  onError(e) {\r\n    $(e.target).remove();\r\n  }\r\n\r\n  render() {\r\n    const { coin, showExtraDetails } = this.props;\r\n    if (!coin) return <div></div>\r\n    var sumStyles = {\r\n      // padding: '2px 4px 2px 0px',\r\n      // textShadow: '1px 1px 1px rgba(0,0,0,1)',\r\n      // backgroundColor: coin.buyColor,\r\n      // color: '#fff',\r\n    };\r\n\r\n    var elPairs = '';\r\n    if (coin.bestPair) {\r\n      var template = _.template(directExchangeLinks[coin.exchangeName]);\r\n      var bestPairLink = template({\r\n        symbol: coin.symbol.toUpperCase(),\r\n        pair: coin.bestPair.toUpperCase()\r\n      });\r\n      bestPairLink = <a href={bestPairLink}>{coin.bestPair.toUpperCase()}</a>\r\n      var bestPairEl = <span></span>;\r\n      var activePairsEl = '';\r\n      if (coin.activePairs.length > 1) {\r\n        bestPairEl = <span><br/> Pair: {bestPairLink}</span>;\r\n        var activePairLinks = [];\r\n        _.each(coin.activePairs, (pair, idx) => {\r\n          var activePairLink = template({\r\n            symbol: coin.symbol.toUpperCase(),\r\n            pair: pair.toUpperCase()\r\n          });\r\n          activePairLinks.push(<a href={activePairLink} key={idx}>{pair.toUpperCase()}</a>);\r\n        });\r\n\r\n        activePairsEl = activePairLinks.map(function(activePairLink, idx) {\r\n          if (idx !== activePairLinks.length - 1) {\r\n            return (\r\n              <span key={activePairLink+idx+coin.symbol}>{activePairLink}, </span>\r\n            );\r\n          } else {\r\n            return activePairLink;\r\n          }\r\n        });\r\n\r\n        activePairsEl = <span><br/> All pairs: {activePairsEl}</span>;\r\n        bestPairEl = <span><br/> Best pairing: {bestPairLink}</span>\r\n      }\r\n\r\n      elPairs = <span>\r\n        {bestPairEl}\r\n        {activePairsEl}\r\n      </span>;\r\n    }\r\n\r\n    var elVolBtc = '';\r\n    var elVol = '';\r\n\r\n    if (coin.volumeBtc > 0) {\r\n      const btcVol = Util.millify(coin.volumeBtc, 8);\r\n      elVolBtc = <span><br/> ฿ {btcVol} est. 24/hr volume</span>\r\n    }\r\n    if (coin.volume > 0) {\r\n      const coinVol = Util.millify(coin.volume, 8);\r\n      elVol = <span><br/> {coin.symbol} {coinVol} est. 24/hr volume</span>\r\n    }\r\n\r\n    var elBuyBtcUsd = '';\r\n    // var elSellBtcUsd = '';\r\n    var elBuy = '';\r\n    // var elSell = '';\r\n\r\n    var elBuyMeter = <div className=\"container-fluid\">\r\n      <div className=\"meter row mb-3 mt-3\">\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n      </div>\r\n    </div>;\r\n\r\n    if (coin.buyTotalBtcRaw > 0) {\r\n      var bc = 'meter row mb-3 mt-3 rating-'+coin.buyColor;\r\n      elBuyMeter = <div className=\"container-fluid\">\r\n        <div className={bc}>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n          <div className=\"col-1 p-0\"><div className=\"rateblock mr-1\"></div></div>\r\n        </div>\r\n      </div>;\r\n\r\n      elBuyBtcUsd = <span>\r\n        <span style={sumStyles}> ฿ {coin.buyTotalBtc} sum of buy orders on all exchanges</span>\r\n        {/* <br/>\r\n        <span style={sumStyles}> $ {coin.buyTotalUsd} sum of buy orders on all exchanges</span> */}\r\n      </span>;\r\n    }\r\n\r\n    if (coin.buyTotalRaw > 0) {\r\n      elBuy = <span>\r\n        <br/> {coin.symbol} {coin.buyTotal} total coins on order on all exchanges\r\n      </span>;\r\n    }\r\n\r\n    // if (coin.sellTotalBtc > 0) {\r\n    //   elSellBtcUsd = <span>\r\n    //     <span> ฿ {coin.sellTotalBtc} sum of sell orders on all exchanges</span>\r\n    //   </span>;\r\n    // }\r\n\r\n    // if (coin.sellTotalRaw > 0) {\r\n    //   elSell = <span>\r\n    //     <br/> {coin.symbol} {coin.sellTotal} total coins on sale on all exchanges\r\n    //   </span>;\r\n    // }\r\n    var topSpace = '';\r\n    if (coin.buyTotalBtc > 0 || coin.buyTotal > 0) {\r\n      topSpace = <span><br/><br/></span>;\r\n    }\r\n    // var nextSpace = '';\r\n    // if (coin.sellTotalBtc > 0 || coin.sellTotal > 0) {\r\n    //   nextSpace = <span><br/><br/></span>;\r\n    // }\r\n\r\n    var headerClass = 'card-header text-white bg-info';\r\n    var elHighPrice = <span><br/> No buy orders found!</span>;\r\n    if (coin.pairPrice !== \"\") {\r\n      var pairEl = <span></span>\r\n      // Decimal.set({ maxE: 0 });\r\n      // Decimal.set()\r\n      var pairInBtcFormatted = Number(Decimal(coin.pairInBtc).toNumber().toPrecision(8)).noExponents();\r\n      var pairInSatoshiFormatted = Number(Decimal(coin.pairInSatoshi).toNumber().toPrecision(8)).toString();\r\n\r\n      if (coin.bestPair.toUpperCase() !== 'BTC') {\r\n        pairEl = <span>\r\n          <br/> <small>Best bid in {coin.bestPair.toUpperCase()}:</small> {coin.pairPrice} {coin.bestPair.toUpperCase()}\r\n          <br/> <small>Best bid in BTC:</small> {pairInBtcFormatted} BTC\r\n        </span>;\r\n      } else {\r\n        pairEl = <span>\r\n          <br/> <small>Best bid in BTC:</small> {pairInBtcFormatted} BTC\r\n        </span>\r\n      }\r\n      elHighPrice = <span>\r\n      {pairEl}\r\n      <br/> <small>Best bid in Satoshi:</small> {pairInSatoshiFormatted} Satoshi\r\n      </span>;\r\n    }\r\n    let orders = '';\r\n    let uSatEl = '';\r\n    let mSatoshiParts = String(coin.mSatoshi).split('.')\r\n    let mSatoshi = <span>{mSatoshiParts[0]}<sup>.{mSatoshiParts}</sup></span>\r\n    let nUsdParts = String(coin.nUsd).split('.')\r\n    let nUsd = <span>{nUsdParts[0]}<sup>.{nUsdParts}</sup></span>\r\n    if (showExtraDetails) {\r\n      orders = <span>\r\n        {topSpace}\r\n        {elBuyBtcUsd}\r\n        {elBuy}\r\n        {/* {nextSpace}\r\n        {elSellBtcUsd}\r\n        {elSell} */}\r\n      </span>;\r\n\r\n      uSatEl = <p>\r\n        {mSatoshi} µSat/h/s\r\n        <br/> {nUsd} nUSD/h/s\r\n      </p>;\r\n    }\r\n    let altExchangeList = '';\r\n    if (coin.exchangeNames && coin.exchangeNames.length > 1) {\r\n      altExchangeList = coin.exchangeList;\r\n    }\r\n\r\n    const { btc24Formatted, btc24Extra } = formatBtc24(coin.btc24);\r\n    const { usd24Formatted, usd24Extra } = formatUsd24(coin.usd24);\r\n\r\n    var exchangeElement = <div>\r\n      <h4 className=\"active-btc\">฿ {btc24Formatted}{btc24Extra} <small>{coin.usdHuman} @ {coin.hash}h/s</small></h4>\r\n      {/* <h4 className=\"active-btc\">฿ {coin.btc24} <small>{coin.usdHuman} @ {coin.hash}h/s</small></h4> */}\r\n      <h4 className=\"active-usd\">$ {usd24Formatted}{usd24Extra} <small>{coin.usdHuman} @ {coin.hash}h/s</small></h4>\r\n      {/* <h4 className=\"active-usd\">$ {coin.usd24} <small>{coin.usdHuman} @ {coin.hash}h/s</small></h4> */}\r\n      <h4 className=\"active-coins\">{coin.symbol} {coin.coinsEarned} <small>{coin.usdHuman} @ {coin.hash}h/s</small></h4>\r\n      {uSatEl}\r\n      {elBuyMeter}\r\n      <p>\r\n        <a href={coin.exchangeLink} target=\"_blank\" rel=\"noopener noreferrer\">{coin.exchangeName}</a>\r\n        {elHighPrice}\r\n        {elVolBtc}\r\n        {elVol}\r\n        {elPairs}\r\n        {orders}\r\n      </p>\r\n      <p>\r\n        {altExchangeList}\r\n      </p>\r\n    </div>;\r\n    if (coin.onExchange !== 'exchange') {\r\n      headerClass = 'card-header text-white bg-danger';\r\n\r\n      exchangeElement = <div>\r\n        <h4>฿ {btc24Formatted}{btc24Extra} {coin.usdHuman} @ {coin.hash}h/s</h4>\r\n        <h4>$ {usd24Formatted}{usd24Extra} @ {coin.hash}h/s</h4>\r\n        <h4>{coin.symbol} {coin.coinsEarned} {coin.usdHuman} @ {coin.hash}h/s</h4>\r\n        <p>\r\n          {mSatoshi} µSat/h/s\r\n          <br/> {nUsd} nUSD/h/s\r\n        </p>\r\n        <p>\r\n          <span className=\"text-danger\">Price theoretical at 1/1000th Satoshi</span>\r\n        </p>\r\n      </div>;\r\n    }\r\n\r\n    var cardBodyClass = 'card-body';\r\n    if (coin.asicFriendly) {\r\n      cardBodyClass = 'card-body asic-friendly';\r\n    }\r\n\r\n    var imgSrc = \"logos/resize/\"+coin.symbol.toLowerCase()+\".png\";\r\n\r\n    var btcTalk = <span></span>\r\n    if (coin.bitcointalkAnn) {\r\n      btcTalk = <span><br/> {coin.announcementDate} <a href={coin.bitcointalkAnn} target=\"_blank\" rel=\"noopener noreferrer\">ANN</a></span>\r\n    }\r\n\r\n    var coinLink = '/coins/'+coin.symbol.toLowerCase()+'-'+coin.coinName.replace(/\\s|'/g,'').toLowerCase();\r\n    var bgImage = {\r\n      backgroundImage: `url('${imgSrc}')`\r\n    }\r\n    var updated = coin.logUpdated;\r\n\r\n    if (coin.coinId === 211 || coin.coinId === 203) {\r\n      updated = coin.updated;\r\n    }\r\n    var stale = <span className=\"text-secondary\">{updated}</span>;\r\n    if (coin.isStale) {\r\n      stale = <span className=\"text-danger\">{updated}</span>;\r\n    }\r\n    return (\r\n      <div className=\"CoinCard card coin\">\r\n        <div className=\"inner rounded\">\r\n          <a className=\"header-link\" href={coinLink}>\r\n            <div className={headerClass} title={coin.coinName + \": \" + coin.coinId}>\r\n                <span className=\"float-right\"><i className=\"fas fa-info-circle\"></i></span>\r\n                {/* <h3><img src={imgSrc} width=\"50\" height=\"50\" className=\"logoName\" alt={coin.symbol} onError={this.onError} />{coin.coinName}</h3> */}\r\n                <h3 style={bgImage}>{coin.coinName}</h3>\r\n            </div>\r\n          </a>\r\n          <div className={cardBodyClass}>\r\n            <div className=\"card-text\">\r\n              {exchangeElement}\r\n              <p>\r\n                {coin.algorithm}\r\n                {btcTalk}\r\n                <br/> {coin.difficulty} difficulty\r\n                <br/> {coin.networkHashrate} network hashrate\r\n                <br/> <span className=\"text-muted\">Network data updated: {stale}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoinCard;\r\n","import React, { PureComponent } from 'react';\r\nimport $ from 'jquery';\r\nimport _ from 'lodash';\r\n// import { Link } from 'react-router-dom';\r\n\r\nclass InactiveCoinCard extends PureComponent {\r\n  onError(e) {\r\n    $(e.target).remove();\r\n  }\r\n\r\n  render() {\r\n    const { coin } = this.props;\r\n\r\n    var headerClass = 'card-header text-white bg-info';\r\n    if (coin.onExchange !== 'exchange') {\r\n      headerClass = 'card-header text-white bg-danger';\r\n    }\r\n\r\n    headerClass = 'card-header';\r\n\r\n    var cardBodyClass = 'card-body';\r\n    if (coin.asicFriendly) {\r\n      cardBodyClass = 'card-body asic-friendly';\r\n    }\r\n\r\n    var imgSrc = \"logos/resize/\"+coin.symbol.toLowerCase()+\".png\";\r\n\r\n    if (coin.links && !coin.links.bitcointalkAnn && coin.bitcointalkAnn) {\r\n      coin.links.bitcointalkAnn = coin.bitcointalkAnn\r\n    }\r\n\r\n    var sortedArray = [];\r\n    _.each(coin.links, function(value, key) {\r\n      sortedArray.push({ linkKey: key, linkValue: value })\r\n    });\r\n\r\n    sortedArray = _.sortBy(sortedArray, ['linkKey']);\r\n\r\n    var generalLinks = [];\r\n    _.each(sortedArray, function(link) {\r\n      var value = link.linkValue;\r\n      var key = link.linkKey;\r\n      var className = \"fab fa-2x fa-\"+key;\r\n      var linkText = _.capitalize(key);\r\n\r\n      if (key === \"website\") {\r\n        className = \"fas fa-2x fa-home\";\r\n      }\r\n      if (key === \"bitcointalkAnn\") {\r\n        className = \"fab fa-2x fa-bitcoin\";\r\n        linkText = \"BitcoinTalk Announcement\";\r\n      }\r\n      if (key === \"repo\") {\r\n        className = \"fab fa-2x fa-github\";\r\n        linkText = \"Source Code\";\r\n      }\r\n\r\n      generalLinks.push(<li className=\"p-2\" key={key}><span className=\"fa-li\"><i className={className}></i></span> <a href={value} target=\"_blank\" rel=\"noopener noreferrer\" title={linkText}>{linkText}</a></li>);\r\n    });\r\n\r\n    var coinLink = '/coins/'+coin.symbol.toLowerCase()+'-'+coin.coinName.replace(/\\s|'/g,'').toLowerCase();\r\n    var bgImage = {\r\n      backgroundImage: `url('${imgSrc}')`\r\n    }\r\n    var lastSeen = '';\r\n\r\n    if (coin.difficulty) {\r\n      lastSeen = <p>\r\n        <b>Last Seen:</b>\r\n        <br/> {coin.updated}\r\n        <br/> {coin.difficulty} difficulty\r\n        <br/> {coin.networkHashrate} network hashrate\r\n      </p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"CoinCard card coin\">\r\n        <div className=\"inner rounded\">\r\n          <a className=\"header-link\" href={coinLink}>\r\n            <div className={headerClass}>\r\n              <span className=\"float-right\"><i className=\"fas fa-info-circle\"></i></span>\r\n              {/* <h3><img src={imgSrc} width=\"50\" height=\"50\" className=\"logoName\" alt={coin.symbol} onError={this.onError} />{coin.coinName}</h3> */}\r\n              <h3 style={bgImage}>{coin.coinName}</h3>\r\n            </div>\r\n          </a>\r\n          <div className={cardBodyClass}>\r\n            <div className=\"card-text\">\r\n              <p>\r\n                {coin.algorithm}\r\n              </p>\r\n              {lastSeen}\r\n              <ul className=\"fa-ul\">\r\n                {generalLinks}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InactiveCoinCard;\r\n","import CoinCard from \"./CoinCard\";\r\nimport InactiveCoinCard from \"./InactiveCoinCard\";\r\nimport React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  List,\r\n  AutoSizer,\r\n  CellMeasurer,\r\n  CellMeasurerCache,\r\n  WindowScroller\r\n} from \"react-virtualized\";\r\nimport \"react-virtualized/styles.css\"; // only needs to be imported once\r\n\r\nclass VirtualCoinList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderRow = this.renderRow.bind(this);\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n\r\n    this.cache = new CellMeasurerCache({\r\n      defaultHeight: 800,\r\n      fixedWidth: true\r\n    });\r\n\r\n    this.state = {\r\n      colCount: -1,\r\n      list: []\r\n    };\r\n  }\r\n\r\n  renderRow({ index, key, style, parent }) {\r\n    return (\r\n      <CellMeasurer\r\n        key={key}\r\n        cache={this.cache}\r\n        parent={parent}\r\n        columnIndex={0}\r\n        rowIndex={index}\r\n      >\r\n        <div style={style}>\r\n          <div className=\"d-flex align-content-stretch flex-row\">\r\n            {_.map(this.state.list[index], (coin, index) => {\r\n              if (this.props.inactiveCoins) {\r\n                return <InactiveCoinCard key={index} coin={coin} />;\r\n              }\r\n              return <CoinCard key={index} coin={coin} showExtraDetails={this.props.showExtraDetails} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </CellMeasurer>\r\n    );\r\n  }\r\n\r\n  updateDimensions() {\r\n    let colCount = 4;\r\n    if (window.innerWidth <= 700) {\r\n      colCount = 1;\r\n    } else if (window.innerWidth <= 1000) {\r\n      colCount = 2;\r\n    } else if (window.innerWidth <= 1200) {\r\n      colCount = 3;\r\n    }\r\n    if (this.state.colCount !== colCount) {\r\n      var coinsChunked = _.chunk(this.props.coins, colCount);\r\n      if (this.listRef) {\r\n        this.listRef.forceUpdateGrid();\r\n      }\r\n      this.setState({ colCount, list: coinsChunked });\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.updateDimensions();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.colCount !== nextState.colCount) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  componentWillReceiveProps() {\r\n    this.setState(\r\n      {\r\n        colCount: -1\r\n      },\r\n      this.updateDimensions\r\n    );\r\n  }\r\n\r\n  render() {\r\n    var styles = {\r\n      display: \"block\",\r\n      position: \"relative\",\r\n      paddingRight: \"15px\"\r\n    };\r\n\r\n    if (this.state.list.length < 1) {\r\n      // this.setState({list:[]})\r\n      // this.updateDimensions();\r\n      // this.setState({list:[]}, this.updateDimensions);\r\n      return <div />;\r\n    }\r\n\r\n    // if (this.state.colCount === -1) {\r\n\r\n    this.cache.clearAll();\r\n\r\n    return (\r\n      <div style={styles}>\r\n        {/* <div className=\"coinlist d-flex align-content-stretch flex-wrap flex-row\"> */}\r\n        <WindowScroller>\r\n          {({\r\n            height,\r\n            isScrolling,\r\n            registerChild,\r\n            onChildScroll,\r\n            scrollTop\r\n          }) => (\r\n            <AutoSizer disableHeight>\r\n              {({ width }) => (\r\n                <div ref={registerChild}>\r\n                  <List\r\n                    ref={ref => this.listRef = ref}\r\n                    overscanRowCount={2}\r\n                    noRowsRenderer={this._noRowsRenderer}\r\n                    rowCount={this.state.list.length}\r\n                    deferredMeasurementCache={this.cache}\r\n                    rowHeight={this.cache.rowHeight}\r\n                    rowRenderer={this.renderRow}\r\n                    width={width}\r\n                    autoHeight={true}\r\n                    isScrolling={isScrolling}\r\n                    onScroll={onChildScroll}\r\n                    scrollTop={scrollTop}\r\n                    height={height}\r\n                    scrollToIndex={0}\r\n                  />\r\n                </div>\r\n              )}\r\n            </AutoSizer>\r\n          )}\r\n        </WindowScroller>\r\n        {/* </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VirtualCoinList;\r\n","import React, { PureComponent } from \"react\";\r\nimport _ from \"lodash\";\r\nimport VirtualCoinList from \"./VirtualCoinList\";\r\n\r\nclass CoinList extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.filterProps = this.filterProps.bind(this);\r\n    this.filterCoins = this.filterCoins.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n\r\n    this.state = {\r\n      coinElements: [],\r\n      coinElementsFiltered: [],\r\n      hiddenByAdvancedOptions: 0,\r\n      searchFilterText: undefined\r\n    };\r\n  }\r\n\r\n  filterProps(props) {\r\n    let hiddenByAdvancedOptions = 0;\r\n    const coinElements = [];\r\n\r\n    if (props.inactiveCoins) {\r\n      _.each(props.coins, (coin) => {\r\n        coinElements.push(coin);\r\n      });\r\n      this.setState({\r\n        coinElements: coinElements,\r\n        coinElementsFiltered: coinElements,\r\n        hiddenByAdvancedOptions\r\n      });\r\n    }\r\n\r\n    _.each(props.coins, (coin, index) => {\r\n      if (_.get(props.activeAlgos, coin.algorithm) === \"true\") {\r\n        if (\r\n          coin.onExchange &&\r\n          props.showTraded === \"true\" &&\r\n          coin.buyTotalUsdRaw > parseFloat(props.minimumUsdBuyOrders)\r\n        ) {\r\n          let exActive = false;\r\n          _.each(coin.exchangeNames, n => {\r\n            if (_.result(props.stateActiveExchanges, n, \"false\") === \"true\") {\r\n              exActive = true;\r\n            }\r\n          });\r\n          if (exActive) {\r\n            coinElements.push(coin);\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (!coin.onExchange && props.showUntraded === \"true\") {\r\n          coinElements.push(coin);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (coin.enabled === 1) {\r\n        hiddenByAdvancedOptions++;\r\n      }\r\n    });\r\n\r\n    let coinElementsFiltered;\r\n    if (this.state.searchFilter && this.state.searchFilter.length > 0) {\r\n      coinElementsFiltered = this.filterCoins();\r\n    } else {\r\n      coinElementsFiltered = coinElements;\r\n    }\r\n\r\n    this.setState({\r\n      coinElements,\r\n      coinElementsFiltered,\r\n      hiddenByAdvancedOptions\r\n    });\r\n  }\r\n\r\n  filterCoins() {\r\n    return _.filter(this.state.coinElements, coin => {\r\n      if (coin.coinName.toLowerCase().indexOf(this.state.searchFilter.toLowerCase()) !== -1) {\r\n        return true;\r\n      } else if (\r\n        coin.symbol.toLowerCase().indexOf(this.state.searchFilter.toLowerCase()) !== -1\r\n      ) {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.filterProps(this.props);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState(\r\n      {\r\n        searchFilter: \"\"\r\n      },\r\n      () => {\r\n        this.filterProps(newProps);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleSearch(e) {\r\n    this.setState(\r\n      {\r\n        searchFilter: e.target.value\r\n      },\r\n      () => {\r\n        this.setState({\r\n          coinElementsFiltered: this.filterCoins()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      coinElements,\r\n      coinElementsFiltered,\r\n      hiddenByAdvancedOptions,\r\n      searchFilterText\r\n    } = this.state;\r\n\r\n    const hiddenBySearch = coinElements.length - coinElementsFiltered.length;\r\n    const coinsDisplay = coinElementsFiltered.length;\r\n\r\n    const tableStyle = { display: \"table\", height: \"100%\" };\r\n    const cellStyle = { display: \"table-cell\", verticalAlign: \"middle\" };\r\n\r\n    let advancedOptionsFilterCountEl = '';\r\n    if (!this.props.inactiveCoins) {\r\n      advancedOptionsFilterCountEl =\r\n        <div className=\"pl-3\">\r\n          <div style={tableStyle}>\r\n            <em style={cellStyle}>\r\n              Advanced options are filtering out\r\n              {\" \"}\r\n              {hiddenByAdvancedOptions}\r\n              {\" \"}\r\n              coins.\r\n            </em>\r\n          </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row pl-3 pr-3 pt-3 pb-0\">\r\n          <div className=\"pl-3\">\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">\r\n                  Filter by Name or Symbol\r\n                </span>\r\n              </div>\r\n              <input\r\n                id=\"filterSearch\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search\"\r\n                onChange={this.handleSearch}\r\n                value={searchFilterText}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"pl-3\">\r\n            <div style={tableStyle}>\r\n              <em style={cellStyle}>\r\n                Search query is filtering out {hiddenBySearch} coins.\r\n              </em>\r\n            </div>\r\n          </div>\r\n          {advancedOptionsFilterCountEl}\r\n          <div className=\"pl-3\">\r\n            <div style={tableStyle}>\r\n              <em style={cellStyle}>{coinsDisplay} coins shown.</em>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <VirtualCoinList coins={coinElementsFiltered} inactiveCoins={this.props.inactiveCoins} showExtraDetails={this.props.showExtraDetails} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoinList;\r\n","import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport _ from \"lodash\";\r\nimport Util from \"./Util\";\r\nimport CoinList from \"./CoinList\";\r\nimport neatCsv from \"neat-csv\";\r\n\r\nclass Home extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.changeTime !== nextState.changeTime) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      coins: [],\r\n      totalCoins: 0,\r\n      totalTradedCoins: 0,\r\n      parsedCoinData: {\r\n        latest: {},\r\n        hourly: {},\r\n        daily: {},\r\n        weekly: {},\r\n        monthly: {}\r\n      },\r\n      // time: localStorage.getItem('time') || 'daily',\r\n      // sort: localStorage.getItem('sort') || 'profit',\r\n      changeTime: 0,\r\n      time: _.result(localStorage, \"time\", \"daily\"),\r\n      sort: _.result(localStorage, \"sort\", \"profit\"),\r\n      order: Util.oldOrder,\r\n      // showTraded: localStorage.getItem('showTraded') || true,\r\n      // showUntraded: localStorage.getItem('showUntraded') || false,\r\n      // showAsic: localStorage.getItem('showAsic') || true,\r\n      // showNonAsic: localStorage.getItem('showNonAsic') || true,\r\n      // shownicehash: localStorage.getItem('shownicehash') || true,\r\n      // showNonnicehash: localStorage.getItem('showNonnicehash') || true,\r\n      showTraded: _.result(localStorage, \"showTraded\", \"true\"),\r\n      showUntraded: _.result(localStorage, \"showUntraded\", \"false\"),\r\n      showAsic: _.result(localStorage, \"showAsic\", \"true\"),\r\n      showNonAsic: _.result(localStorage, \"showNonAsic\", \"true\"),\r\n      shownicehash: _.result(localStorage, \"shownicehash\", \"true\"),\r\n      showNonnicehash: _.result(localStorage, \"showNonnicehash\", \"true\"),\r\n      showAdvanced: _.result(localStorage, \"showAdvanced\", \"false\"),\r\n      activeAlgos: {\r\n        cryptonight: _.result(localStorage, \"activeAlgos_cryptonight\", \"true\"),\r\n        cryptonight_lite: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_lite\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_heavy: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_heavy\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_monero: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_monero\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_v8: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_v8\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_dark: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_dark\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_upx: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_upx\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_adaptive: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_adaptive\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_moneroGpu: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_moneroGpu\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_moneroCpu: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_moneroCpu\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_aeon: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_aeon\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_alloy: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_alloy\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_haven: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_haven\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_stellite: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_stellite\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_b2n: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_b2n\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_saber: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_saber\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_fast: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_fast\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_marketcash: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_marketcash\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_arto: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_arto\",\r\n          \"true\"\r\n        ),\r\n        cryptonight_turtle: _.result(\r\n          localStorage,\r\n          \"activeAlgos_cryptonight_turtle\",\r\n          \"true\"\r\n        ),\r\n        wild_keccak: _.result(localStorage, \"activeAlgos_wild_keccak\", \"true\")\r\n      },\r\n      showExtraDetails: _.result(localStorage, \"showExtraDetails_v2\", \"true\"),\r\n      stateActiveExchanges: {\r\n        Kucoin: _.result(localStorage, \"Kucoin\", \"true\"),\r\n        Cryptopia: _.result(localStorage, \"Cryptopia\", \"true\"),\r\n        Southxchange: _.result(localStorage, \"Southxchange\", \"true\"),\r\n        TradeOgre: _.result(localStorage, \"TradeOgre\", \"true\"),\r\n        StocksExchange: _.result(localStorage, \"StocksExchange\", \"true\"),\r\n        Octaex: _.result(localStorage, \"Octaex\", \"true\"),\r\n        TradeSatoshi: _.result(localStorage, \"TradeSatoshi\", \"true\"),\r\n        Qryptos: _.result(localStorage, \"Qryptos\", \"true\"),\r\n        Cryptohub: _.result(localStorage, \"Cryptohub\", \"true\"),\r\n        Livecoin: _.result(localStorage, \"Livecoin\", \"true\"),\r\n        \"BTC-Alpha\": _.result(localStorage, \"BTC-Alpha\", \"true\"),\r\n        Crex24: _.result(localStorage, \"Crex24\", \"true\"),\r\n        Altex: _.result(localStorage, \"Altex\", \"true\"),\r\n        MapleChange: _.result(localStorage, \"MapleChange\", \"true\"),\r\n        BitexLive: _.result(localStorage, \"BitexLive\", \"true\"),\r\n        Kompler: _.result(localStorage, \"Kompler\", \"true\"),\r\n        BitexBay: _.result(localStorage, \"BitexBay\", \"true\"),\r\n        Graviex: _.result(localStorage, \"Graviex\", \"true\"),\r\n        Bittrex: _.result(localStorage, \"Bittrex\", \"true\"),\r\n        FirstCryptoBank: _.result(localStorage, \"FirstCryptoBank\", \"true\"),\r\n        Primex: _.result(localStorage, \"Primex\", \"true\"),\r\n        Escodex: _.result(localStorage, \"Escodex\", \"true\"),\r\n        Bisq: _.result(localStorage, \"Bisq\", \"true\"),\r\n        Raisex: _.result(localStorage, \"Raisex\", \"true\"),\r\n        Bitebtc: _.result(localStorage, \"Bitebtc\", \"true\"),\r\n        Finexbox: _.result(localStorage, \"Finexbox\", \"true\"),\r\n      },\r\n      timeouts: {\r\n        latest: 1200,\r\n        hourly: 3600,\r\n        daily: 86400,\r\n        weekly: 86400 * 7,\r\n        monthly: 86400 * 30\r\n      },\r\n      algorithms: {\r\n        cryptonight: _.result(localStorage, \"cryptonight\", 10000),\r\n        cryptonight_lite: _.result(localStorage, \"cryptonight_lite\", 18000),\r\n        cryptonight_heavy: _.result(localStorage, \"cryptonight_heavy\", 7500),\r\n        cryptonight_monero: _.result(localStorage, \"cryptonight_monero\", 10000),\r\n        cryptonight_v8: _.result(localStorage, \"cryptonight_v8\", 5000),\r\n        cryptonight_dark: _.result(localStorage, \"cryptonight_dark\", 8000),\r\n        cryptonight_upx: _.result(localStorage, \"cryptonight_upx\", 18000),\r\n        cryptonight_adaptive: _.result(\r\n          localStorage,\r\n          \"cryptonight_adaptive\",\r\n          10000\r\n        ),\r\n        cryptonight_moneroGpu: _.result(\r\n          localStorage,\r\n          \"cryptonight_moneroGpu\",\r\n          10000\r\n        ),\r\n        cryptonight_moneroCpu: _.result(\r\n          localStorage,\r\n          \"cryptonight_moneroCpu\",\r\n          10000\r\n        ),\r\n        cryptonight_aeon: _.result(localStorage, \"cryptonight_aeon\", 18000),\r\n        cryptonight_alloy: _.result(localStorage, \"cryptonight_alloy\", 5000),\r\n        cryptonight_haven: _.result(localStorage, \"cryptonight_haven\", 10000),\r\n        cryptonight_stellite: _.result(\r\n          localStorage,\r\n          \"cryptonight_stellite\",\r\n          10000\r\n        ),\r\n        cryptonight_b2n: _.result(localStorage, \"cryptonight_b2n\", 18000),\r\n        cryptonight_saber: _.result(localStorage, \"cryptonight_saber\", 18000),\r\n        cryptonight_fast: _.result(localStorage, \"cryptonight_fast\", 14000),\r\n        cryptonight_marketcash: _.result(\r\n          localStorage,\r\n          \"cryptonight_marketcash\",\r\n          14000\r\n        ),\r\n        cryptonight_arto: _.result(localStorage, \"cryptonight_arto\", 9000),\r\n        cryptonight_turtle: _.result(localStorage, \"cryptonight_turtle\", 9000),\r\n        wild_keccak: _.result(localStorage, \"wild_keccak\", 18000000)\r\n      },\r\n      minimumUsdBuyOrders: _.result(localStorage, \"minimumUsdBuyOrdersV2\", -1)\r\n    };\r\n    this.sortByHashrate = this.sortByHashrate.bind(this);\r\n    this.sortByProfit = this.sortByProfit.bind(this);\r\n    this.sortByCoins = this.sortByCoins.bind(this);\r\n    this.sortByNewest = this.sortByNewest.bind(this);\r\n    this.toggleShowExtraDetails = this.toggleShowExtraDetails.bind(this);\r\n    this.toggleTradedCoins = this.toggleTradedCoins.bind(this);\r\n    this.toggleUntradedCoins = this.toggleUntradedCoins.bind(this);\r\n    this.toggleAsicCoins = this.toggleAsicCoins.bind(this);\r\n    this.toggleNonAsicCoins = this.toggleNonAsicCoins.bind(this);\r\n    this.togglenicehashCoins = this.togglenicehashCoins.bind(this);\r\n    this.toggleNonnicehashCoins = this.toggleNonnicehashCoins.bind(this);\r\n    this.updateHashrate = this.updateHashrate.bind(this);\r\n    this.toggleAdvancedHash = this.toggleAdvancedHash.bind(this);\r\n    this.updateMasterHashrate = this.updateMasterHashrate.bind(this);\r\n    this.handleSortChange = this.handleSortChange.bind(this);\r\n    this.handleTimeChange = this.handleTimeChange.bind(this);\r\n    this.handleExchangeChange = this.handleExchangeChange.bind(this);\r\n    this.updateMinimumUsdBuyOrders = this.updateMinimumUsdBuyOrders.bind(this);\r\n    this.toggleExchangesOff = this.toggleExchangesOff.bind(this);\r\n    this.toggleExchangesOn = this.toggleExchangesOn.bind(this);\r\n  }\r\n\r\n  sortByNewest(newState) {\r\n    this.setState(prevState => {\r\n      var order = 1;\r\n      // if (prevState.sort === 'newest') {\r\n      var sort = \"newest\";\r\n      localStorage.setItem(\"order\", order);\r\n      localStorage.setItem(\"sort\", sort);\r\n\r\n      const time = newState.time || prevState.time;\r\n      const parsedCoinData =\r\n        newState.parsedCoinData || prevState.parsedCoinData;\r\n      const algorithms = newState.algorithms || prevState.algorithms;\r\n      const timeouts = newState.timeouts || prevState.timeouts;\r\n\r\n      const coins = Util.sortByNewest(\r\n        parsedCoinData[time],\r\n        order,\r\n        algorithms,\r\n        timeouts[time]\r\n      );\r\n\r\n      return {\r\n        coins,\r\n        sort,\r\n        order,\r\n        time,\r\n        changeTime: new Date().getTime(),\r\n        ...newState\r\n      };\r\n    });\r\n  }\r\n\r\n  sortByHashrate(newState) {\r\n    this.setState(prevState => {\r\n      var order = 1;\r\n      // if (prevState.sort === 'hashrate') {\r\n      var sort = \"hashrate\";\r\n      localStorage.setItem(\"order\", order);\r\n      localStorage.setItem(\"sort\", sort);\r\n\r\n      const time = newState.time || prevState.time;\r\n      const parsedCoinData =\r\n        newState.parsedCoinData || prevState.parsedCoinData;\r\n      const algorithms = newState.algorithms || prevState.algorithms;\r\n      const timeouts = newState.timeouts || prevState.timeouts;\r\n\r\n      const coins = Util.sortByHashrate(\r\n        parsedCoinData[time],\r\n        order,\r\n        algorithms,\r\n        timeouts[time]\r\n      );\r\n\r\n      return {\r\n        coins,\r\n        sort,\r\n        order,\r\n        time,\r\n        changeTime: new Date().getTime(),\r\n        ...newState\r\n      };\r\n    });\r\n  }\r\n\r\n  sortByProfit(newState) {\r\n    this.setState(prevState => {\r\n      var order = 1;\r\n      // if (prevState.sort === 'profit') {\r\n      var sort = \"profit\";\r\n      localStorage.setItem(\"order\", order);\r\n      localStorage.setItem(\"sort\", sort);\r\n\r\n      const time = newState.time || prevState.time;\r\n      const parsedCoinData =\r\n        newState.parsedCoinData || prevState.parsedCoinData;\r\n      const algorithms = newState.algorithms || prevState.algorithms;\r\n      const timeouts = newState.timeouts || prevState.timeouts;\r\n\r\n      const coins = Util.sortByProfit(\r\n        parsedCoinData[time],\r\n        order,\r\n        algorithms,\r\n        timeouts[time]\r\n      );\r\n\r\n      return {\r\n        coins,\r\n        sort,\r\n        order,\r\n        time,\r\n        changeTime: new Date().getTime(),\r\n        ...newState\r\n      };\r\n    });\r\n  }\r\n\r\n  sortByCoins(newState) {\r\n    this.setState(prevState => {\r\n      var order = 1;\r\n      // if (prevState.sort === 'coins') {\r\n      var sort = \"coins\";\r\n      localStorage.setItem(\"order\", order);\r\n      localStorage.setItem(\"sort\", sort);\r\n\r\n      const time = newState.time || prevState.time;\r\n      const parsedCoinData =\r\n        newState.parsedCoinData || prevState.parsedCoinData;\r\n      const algorithms = newState.algorithms || prevState.algorithms;\r\n      const timeouts = newState.timeouts || prevState.timeouts;\r\n\r\n      const coins = Util.sortByCoins(\r\n        parsedCoinData[time],\r\n        order,\r\n        algorithms,\r\n        timeouts[time]\r\n      );\r\n\r\n      return {\r\n        coins,\r\n        sort,\r\n        order,\r\n        time,\r\n        changeTime: new Date().getTime(),\r\n        ...newState\r\n      };\r\n    });\r\n  }\r\n\r\n  toggleShowExtraDetails() {\r\n    this.setState(prevState => {\r\n      localStorage.setItem(\r\n        \"showExtraDetails_v2\",\r\n        prevState.showExtraDetails === \"true\" ? \"false\" : \"true\"\r\n      );\r\n      return {\r\n        showExtraDetails: prevState.showExtraDetails === \"true\" ? \"false\" : \"true\",\r\n        changeTime: new Date().getTime()\r\n      };\r\n    });\r\n  }\r\n\r\n  toggleTradedCoins() {\r\n    this.setState(prevState => {\r\n      localStorage.setItem(\r\n        \"showTraded\",\r\n        prevState.showTraded === \"true\" ? \"false\" : \"true\"\r\n      );\r\n      return {\r\n        showTraded: prevState.showTraded === \"true\" ? \"false\" : \"true\",\r\n        changeTime: new Date().getTime()\r\n      };\r\n    });\r\n  }\r\n\r\n  toggleUntradedCoins() {\r\n    this.setState(prevState => {\r\n      localStorage.setItem(\r\n        \"showUntraded\",\r\n        prevState.showUntraded === \"true\" ? \"false\" : \"true\"\r\n      );\r\n      return {\r\n        showUntraded: prevState.showUntraded === \"true\" ? \"false\" : \"true\",\r\n        changeTime: new Date().getTime()\r\n      };\r\n    });\r\n  }\r\n\r\n  toggleAsicCoins() {\r\n    this.setState(prevState => {\r\n      localStorage.setItem(\r\n        \"showAsic\",\r\n        prevState.showAsic === \"true\" ? \"false\" : \"true\"\r\n      );\r\n      return {\r\n        showAsic: prevState.showAsic === \"true\" ? \"false\" : \"true\",\r\n        changeTime: new Date().getTime()\r\n      };\r\n    }, this.updateActiveAlgos);\r\n  }\r\n\r\n  toggleNonAsicCoins() {\r\n    this.setState(prevState => {\r\n      localStorage.setItem(\r\n        \"showNonAsic\",\r\n        prevState.showNonAsic === \"true\" ? \"false\" : \"true\"\r\n      );\r\n      return {\r\n        showNonAsic: prevState.showNonAsic === \"true\" ? \"false\" : \"true\",\r\n        changeTime: new Date().getTime()\r\n      };\r\n    }, this.updateActiveAlgos);\r\n  }\r\n\r\n  togglenicehashCoins() {\r\n    this.setState(prevState => {\r\n      localStorage.setItem(\r\n        \"shownicehash\",\r\n        prevState.shownicehash === \"true\" ? \"false\" : \"true\"\r\n      );\r\n      return {\r\n        shownicehash: prevState.shownicehash === \"true\" ? \"false\" : \"true\",\r\n        changeTime: new Date().getTime()\r\n      };\r\n    }, this.updateActiveAlgos);\r\n  }\r\n\r\n  toggleNonnicehashCoins() {\r\n    this.setState(prevState => {\r\n      localStorage.setItem(\r\n        \"showNonnicehash\",\r\n        prevState.showNonnicehash === \"true\" ? \"false\" : \"true\"\r\n      );\r\n      return {\r\n        showNonnicehash: prevState.showNonnicehash === \"true\"\r\n          ? \"false\"\r\n          : \"true\",\r\n        changeTime: new Date().getTime()\r\n      };\r\n    }, this.updateActiveAlgos);\r\n  }\r\n\r\n  toggleAdvancedHash() {\r\n    this.setState(prevState => {\r\n      localStorage.setItem(\r\n        \"showAdvanced\",\r\n        prevState.showAdvanced === \"true\" ? \"false\" : \"true\"\r\n      );\r\n      return {\r\n        showAdvanced: prevState.showAdvanced === \"true\" ? \"false\" : \"true\",\r\n        changeTime: new Date().getTime()\r\n      };\r\n    });\r\n  }\r\n\r\n  toggleCoinAlgo(text) {\r\n    this.setState(prevState => {\r\n      var activeAlgos = prevState.activeAlgos;\r\n      activeAlgos[text] = activeAlgos[text] === \"true\" ? \"false\" : \"true\";\r\n\r\n      localStorage.setItem(\"activeAlgos_\" + text, activeAlgos[text].toString());\r\n\r\n      return { activeAlgos, changeTime: new Date().getTime() };\r\n    });\r\n  }\r\n\r\n  updateActiveAlgos() {\r\n    var activeAlgos = this.state.activeAlgos;\r\n    var showAsic = this.state.showAsic;\r\n    var shownicehash = this.state.shownicehash;\r\n    var showNonAsic = this.state.showNonAsic;\r\n    var showNonnicehash = this.state.showNonnicehash;\r\n\r\n    _.each(activeAlgos, (value, key) => {\r\n      activeAlgos[key] = \"false\";\r\n    });\r\n\r\n    if (showAsic === \"true\" && shownicehash === \"true\") {\r\n      activeAlgos.cryptonight = \"true\";\r\n      activeAlgos.cryptonight_lite = \"true\";\r\n      activeAlgos.cryptonight_monero = \"true\";\r\n      activeAlgos.cryptonight_heavy = \"true\";\r\n    }\r\n\r\n    if (showAsic === \"true\") {\r\n      activeAlgos.cryptonight = \"true\";\r\n      activeAlgos.cryptonight_lite = \"true\";\r\n    }\r\n\r\n    if (shownicehash === \"true\") {\r\n      activeAlgos.cryptonight_monero = \"true\";\r\n      activeAlgos.cryptonight_heavy = \"true\";\r\n    }\r\n\r\n    if (showNonAsic === \"true\" && showNonnicehash === \"true\") {\r\n      _.each(activeAlgos, (value, key) => {\r\n        if (\r\n          key !== \"cryptonight\" &&\r\n          key !== \"cryptonight_lite\" &&\r\n          key !== \"cryptonight_monero\" &&\r\n          key !== \"cryptonight_heavy\"\r\n        ) {\r\n          activeAlgos[key] = \"true\";\r\n        }\r\n      });\r\n    }\r\n\r\n    if (showNonAsic === \"true\") {\r\n      _.each(activeAlgos, (value, key) => {\r\n        if (key !== \"cryptonight\" && key !== \"cryptonight_lite\") {\r\n          activeAlgos[key] = \"true\";\r\n        }\r\n      });\r\n    }\r\n\r\n    if (showNonnicehash === \"true\") {\r\n      _.each(activeAlgos, (value, key) => {\r\n        if (key !== \"cryptonight_monero\" && key !== \"cryptonight_heavy\") {\r\n          activeAlgos[key] = \"true\";\r\n        }\r\n      });\r\n\r\n      if (showAsic === \"false\") {\r\n        activeAlgos.cryptonight = \"false\";\r\n        activeAlgos.cryptonight_lite = \"false\";\r\n      }\r\n\r\n      if (shownicehash === \"false\") {\r\n        activeAlgos.cryptonight_monero = \"false\";\r\n        activeAlgos.cryptonight_heavy = \"false\";\r\n      }\r\n    }\r\n\r\n    _.each(activeAlgos, (value, key) => {\r\n      localStorage.setItem(\"activeAlgos_\" + key, value);\r\n    });\r\n\r\n    this.setState(prevState => {\r\n      return { activeAlgos, changeTime: new Date().getTime() };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (globalCoinDataRaw.length && Util.generalCoinData.length && Util.latestPoolData.length && Util.generalPoolData.length && Util.latestCoinData.length) {\r\n\r\n    var coinDataPromise = fetch(`..\\\\coinInfo.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n    var latestDataPromise = fetch(`..\\\\coinValuesLatest.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n    var dailyDataPromise = fetch(`..\\\\coinValuesDaily.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n    var hourlyDataPromise = fetch(`..\\\\coinValuesHourly.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n    var weeklyDataPromise = fetch(`..\\\\coinValuesWeekly.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n    var monthlyDataPromise = fetch(`..\\\\coinValuesMonthly.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n    var poolDataPromise = fetch(`..\\\\poolInfo.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n    var poolDataLatestPromise = fetch(`..\\\\poolDataLatest.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n\r\n    var algorithms = this.state.algorithms;\r\n    var timeouts = this.state.timeouts;\r\n\r\n    Promise.all([\r\n      coinDataPromise,\r\n      latestDataPromise,\r\n      dailyDataPromise,\r\n      hourlyDataPromise,\r\n      weeklyDataPromise,\r\n      monthlyDataPromise,\r\n      poolDataPromise,\r\n      poolDataLatestPromise\r\n    ]).then(values => {\r\n      const coinDataRaw = {\r\n        coins: values[0],\r\n        latest: values[1],\r\n        daily: values[2],\r\n        hourly: values[3],\r\n        weekly: values[4],\r\n        monthly: values[5]\r\n      };\r\n\r\n      Util.generalCoinData = values[0];\r\n      Util.generalPoolData = values[6];\r\n      Util.latestPoolData = values[7];\r\n\r\n      var totalTradedCoins = 0;\r\n\r\n      // Util.latestCoinData = latest;\r\n\r\n      // let timeData = [];\r\n      // if (this.state.time !== 'latest') {\r\n\r\n      let timeData = [];\r\n      _.each(coinDataRaw[this.state.time], value => {\r\n        const coin = _.find(Util.generalCoinData, [\"coinId\", value.coinId]);\r\n        if (coin && coin.enabled) {\r\n          // console.log('timeouts[this.state.time]',timeouts[this.state.time]);\r\n          // console.log('this.state.time',this.state.time)\r\n          const parsedCoin = Util.getCoinData(\r\n            coin,\r\n            value,\r\n            algorithms,\r\n            timeouts[this.state.time]\r\n          );\r\n          if (parsedCoin.onExchange) totalTradedCoins++;\r\n          timeData.push(parsedCoin);\r\n        }\r\n      });\r\n      Util.latestCoinData = timeData;\r\n\r\n      var parsedCoinData = {};\r\n      parsedCoinData[this.state.time] = timeData;\r\n\r\n      const newState = {\r\n        totalTradedCoins,\r\n        totalCoins: timeData.length,\r\n        parsedCoinData,\r\n        coinDataRaw\r\n      };\r\n\r\n      if (this.state.sort === \"profit\") {\r\n        this.sortByProfit(newState);\r\n      } else if (this.state.sort === \"hashrate\") {\r\n        this.sortByHashrate(newState);\r\n      } else if (this.state.sort === \"coins\") {\r\n        this.sortByCoins(newState);\r\n      } else if (this.state.sort === \"newest\") {\r\n        this.sortByNewest(newState);\r\n      } else {\r\n        this.setState({\r\n          coins: parsedCoinData[this.state.time],\r\n          changeTime: new Date().getTime(),\r\n          ...newState\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  updateCoinData(algorithms, timeouts, time) {\r\n    const timeData = [];\r\n    _.each(this.state.coinDataRaw[time], value => {\r\n      const coin = _.find(Util.generalCoinData, [\"coinId\", value.coinId]);\r\n      if (coin && coin.enabled) {\r\n        // console.log('timeouts[this.state.time]',timeouts[this.state.time]);\r\n        // console.log('this.state.time',this.state.time)\r\n        timeData.push(Util.getCoinData(coin, value, algorithms, timeouts[time]));\r\n      }\r\n    });\r\n\r\n    var coinData = {};\r\n    coinData[time] = timeData;\r\n\r\n    return coinData;\r\n  }\r\n\r\n  updateMasterHashrate() {\r\n    var moneroGpu = $(\"#cryptonight_moneroGpu\").val();\r\n    var moneroCpu = $(\"#cryptonight_moneroCpu\").val();\r\n\r\n    var algorithms = {\r\n      cryptonight_moneroGpu: moneroGpu,\r\n      cryptonight_moneroCpu: moneroCpu,\r\n      cryptonight: moneroGpu * 1 + moneroCpu * 1,\r\n      cryptonight_lite: moneroGpu * 2 + moneroCpu * 3.5,\r\n      cryptonight_heavy: moneroGpu * 0.7 + moneroCpu * 0.5,\r\n      cryptonight_monero: moneroGpu * 1 + moneroCpu * 1,\r\n      cryptonight_adaptive: moneroCpu * 2,\r\n      cryptonight_v8: moneroGpu * 0.875 + moneroCpu * 0.875,\r\n      cryptonight_dark: moneroCpu * 1,\r\n      cryptonight_upx: moneroCpu * 1,\r\n      cryptonight_aeon: moneroGpu * 2 + moneroCpu * 3.5,\r\n      cryptonight_alloy: moneroGpu * 0.5 + moneroCpu * 0.5,\r\n      cryptonight_haven: moneroGpu * 0.7 + moneroCpu * 0.5,\r\n      cryptonight_stellite: moneroGpu * 1 + moneroCpu * 1,\r\n      cryptonight_b2n: moneroGpu * 1 + moneroCpu * 1,\r\n      cryptonight_saber: moneroGpu * 0.7 + moneroCpu * 0.5,\r\n      cryptonight_fast: moneroGpu * 1.8 + moneroCpu * 1,\r\n      cryptonight_marketcash: moneroGpu * 1 + moneroCpu * 1,\r\n      cryptonight_arto: moneroGpu * 0.9 + moneroCpu * 0.9,\r\n      cryptonight_turtle: moneroGpu * 2 + moneroCpu * 2,\r\n      wild_keccak: moneroGpu * 3050 + moneroCpu * 330\r\n    };\r\n\r\n    localStorage.setItem(\"cryptonight\", algorithms[\"cryptonight\"]);\r\n    localStorage.setItem(\"cryptonight_lite\", algorithms[\"cryptonight_lite\"]);\r\n    localStorage.setItem(\"cryptonight_heavy\", algorithms[\"cryptonight_heavy\"]);\r\n    localStorage.setItem(\r\n      \"cryptonight_monero\",\r\n      algorithms[\"cryptonight_monero\"]\r\n    );\r\n    localStorage.setItem(\r\n      \"cryptonight_adaptive\",\r\n      algorithms[\"cryptonight_adaptive\"]\r\n    );\r\n    localStorage.setItem(\"cryptonight_v8\", algorithms[\"cryptonight_v8\"]);\r\n    localStorage.setItem(\"cryptonight_v8\", algorithms[\"cryptonight_v8\"]);\r\n    localStorage.setItem(\"cryptonight_aeon\", algorithms[\"cryptonight_aeon\"]);\r\n    localStorage.setItem(\"cryptonight_alloy\", algorithms[\"cryptonight_alloy\"]);\r\n    localStorage.setItem(\"cryptonight_haven\", algorithms[\"cryptonight_haven\"]);\r\n    localStorage.setItem(\r\n      \"cryptonight_stellite\",\r\n      algorithms[\"cryptonight_stellite\"]\r\n    );\r\n    localStorage.setItem(\"cryptonight_b2n\", algorithms[\"cryptonight_b2n\"]);\r\n    localStorage.setItem(\"cryptonight_saber\", algorithms[\"cryptonight_saber\"]);\r\n    localStorage.setItem(\"cryptonight_fast\", algorithms[\"cryptonight_fast\"]);\r\n    localStorage.setItem(\r\n      \"cryptonight_marketcash\",\r\n      algorithms[\"cryptonight_marketcash\"]\r\n    );\r\n    localStorage.setItem(\"cryptonight_arto\", algorithms[\"cryptonight_arto\"]);\r\n    localStorage.setItem(\"cryptonight_turtle\", algorithms[\"cryptonight_turtle\"]);\r\n    localStorage.setItem(\"cryptonight_moneroGpu\", moneroGpu);\r\n    localStorage.setItem(\"cryptonight_moneroCpu\", moneroCpu);\r\n\r\n    localStorage.setItem(\"wild_keccak\", algorithms[\"wild_keccak\"]);\r\n    // localStorage.setItem('time', this.state.time.toString());\r\n    // localStorage.setItem('sort', this.state.sort.toString());\r\n    // localStorage.setItem('showTraded', this.state.showTraded.toString());\r\n    // localStorage.setItem('showUntraded', this.state.showUntraded.toString());\r\n    // localStorage.setItem('showAsic', this.state.showAsic.toString());\r\n    // localStorage.setItem('showNonAsic', this.state.showNonAsic.toString());\r\n    // localStorage.setItem('shownicehash', this.state.shownicehash.toString());\r\n    // localStorage.setItem('showNonnicehash', this.state.showNonnicehash.toString());\r\n\r\n    const parsedCoinData = this.updateCoinData(\r\n      algorithms,\r\n      this.state.timeouts,\r\n      this.state.time\r\n    );\r\n\r\n    const newState = {\r\n      parsedCoinData,\r\n      algorithms\r\n    };\r\n\r\n    if (this.state.sort === \"profit\") {\r\n      this.sortByProfit(newState);\r\n    } else if (this.state.sort === \"hashrate\") {\r\n      this.sortByHashrate(newState);\r\n    } else if (this.state.sort === \"coins\") {\r\n      this.sortByCoins(newState);\r\n    } else if (this.state.sort === \"newest\") {\r\n      this.sortByNewest(newState);\r\n    } else {\r\n      this.setState({\r\n        coins: parsedCoinData[this.state.time],\r\n        changeTime: new Date().getTime(),\r\n        ...newState\r\n      });\r\n    }\r\n  }\r\n\r\n  updateHashrate(options) {\r\n    let _time = options.time;\r\n    var algorithms = {\r\n      cryptonight: $(\"#cryptonight_Hashrate\").val(),\r\n      cryptonight_lite: $(\"#cryptonight_liteHashrate\").val(),\r\n      cryptonight_heavy: $(\"#cryptonight_heavyHashrate\").val(),\r\n      cryptonight_monero: $(\"#cryptonight_moneroHashrate\").val(),\r\n      cryptonight_v8: $(\"#cryptonight_v8Hashrate\").val(),\r\n      cryptonight_dark: $(\"#cryptonight_darkHashrate\").val(),\r\n      cryptonight_upx: $(\"#cryptonight_upxHashrate\").val(),\r\n      cryptonight_adaptive: $(\"#cryptonight_adaptiveHashrate\").val(),\r\n      cryptonight_aeon: $(\"#cryptonight_aeonHashrate\").val(),\r\n      cryptonight_alloy: $(\"#cryptonight_alloyHashrate\").val(),\r\n      cryptonight_haven: $(\"#cryptonight_havenHashrate\").val(),\r\n      cryptonight_stellite: $(\"#cryptonight_stelliteHashrate\").val(),\r\n      cryptonight_b2n: $(\"#cryptonight_b2nHashrate\").val(),\r\n      cryptonight_saber: $(\"#cryptonight_saberHashrate\").val(),\r\n      cryptonight_fast: $(\"#cryptonight_fastHashrate\").val(),\r\n      cryptonight_marketcash: $(\"#cryptonight_marketcashHashrate\").val(),\r\n      cryptonight_arto: $(\"#cryptonight_artoHashrate\").val(),\r\n      cryptonight_turtle: $(\"#cryptonight_turtleHashrate\").val(),\r\n      wild_keccak: $(\"#wild_keccakHashrate\").val(),\r\n      cryptonight_moneroGpu: $(\"#cryptonight_moneroGpu\").val(),\r\n      cryptonight_moneroCpu: $(\"#cryptonight_moneroCpu\").val()\r\n    };\r\n\r\n    localStorage.setItem(\"cryptonight\", algorithms[\"cryptonight\"]);\r\n    localStorage.setItem(\"cryptonight_lite\", algorithms[\"cryptonight_lite\"]);\r\n    localStorage.setItem(\"cryptonight_heavy\", algorithms[\"cryptonight_heavy\"]);\r\n    localStorage.setItem(\r\n      \"cryptonight_monero\",\r\n      algorithms[\"cryptonight_monero\"]\r\n    );\r\n    localStorage.setItem(\"cryptonight_v8\", algorithms[\"cryptonight_v8\"]);\r\n    localStorage.setItem(\"cryptonight_dark\", algorithms[\"cryptonight_dark\"]);\r\n    localStorage.setItem(\"cryptonight_upx\", algorithms[\"cryptonight_upx\"]);\r\n    localStorage.setItem(\r\n      \"cryptonight_adaptive\",\r\n      algorithms[\"cryptonight_adaptive\"]\r\n    );\r\n    localStorage.setItem(\"cryptonight_aeon\", algorithms[\"cryptonight_aeon\"]);\r\n    localStorage.setItem(\"cryptonight_alloy\", algorithms[\"cryptonight_alloy\"]);\r\n    localStorage.setItem(\"cryptonight_haven\", algorithms[\"cryptonight_haven\"]);\r\n    localStorage.setItem(\r\n      \"cryptonight_stellite\",\r\n      algorithms[\"cryptonight_stellite\"]\r\n    );\r\n    localStorage.setItem(\"cryptonight_b2n\", algorithms[\"cryptonight_b2n\"]);\r\n    localStorage.setItem(\"cryptonight_saber\", algorithms[\"cryptonight_saber\"]);\r\n    localStorage.setItem(\"cryptonight_fast\", algorithms[\"cryptonight_fast\"]);\r\n    localStorage.setItem(\r\n      \"cryptonight_marketcash\",\r\n      algorithms[\"cryptonight_marketcash\"]\r\n    );\r\n    localStorage.setItem(\"cryptonight_arto\", algorithms[\"cryptonight_arto\"]);\r\n    localStorage.setItem(\"cryptonight_turtle\", algorithms[\"cryptonight_turtle\"]);\r\n    localStorage.setItem(\"wild_keccak\", algorithms[\"wild_keccak\"]);\r\n    localStorage.setItem(\r\n      \"cryptonight_moneroGpu\",\r\n      algorithms[\"cryptonight_moneroGpu\"]\r\n    );\r\n    localStorage.setItem(\r\n      \"cryptonight_moneroCpu\",\r\n      algorithms[\"cryptonight_moneroCpu\"]\r\n    );\r\n    // localStorage.setItem('time', this.state.time.toString());\r\n    // localStorage.setItem('sort', this.state.sort.toString());\r\n    // localStorage.setItem('showTraded', this.state.showTraded.toString());\r\n    // localStorage.setItem('showUntraded', this.state.showUntraded.toString());\r\n    // localStorage.setItem('showAsic', this.state.showAsic.toString());\r\n    // localStorage.setItem('showNonAsic', this.state.showNonAsic.toString());\r\n    // localStorage.setItem('shownicehash', this.state.shownicehash.toString());\r\n    // localStorage.setItem('showNonnicehash', this.state.showNonnicehash.toString());\r\n\r\n    let time = _time || this.state.time;\r\n    // let time = this.state.time;\r\n    const parsedCoinData = this.updateCoinData(\r\n      algorithms,\r\n      this.state.timeouts,\r\n      time\r\n    );\r\n\r\n    const newState = {\r\n      parsedCoinData,\r\n      algorithms,\r\n      time,\r\n      changeTime: new Date().getTime(),\r\n    };\r\n\r\n    if (this.state.sort === \"profit\") {\r\n      this.sortByProfit(newState);\r\n    } else if (this.state.sort === \"hashrate\") {\r\n      this.sortByHashrate(newState);\r\n    } else if (this.state.sort === \"coins\") {\r\n      this.sortByCoins(newState);\r\n    } else if (this.state.sort === \"newest\") {\r\n      this.sortByNewest(newState);\r\n    } else {\r\n      this.setState({\r\n        coins: parsedCoinData[time],\r\n        ...newState\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSortChange(e) {\r\n    const newState = {\r\n      parsedCoinData: this.state.parsedCoinData\r\n    };\r\n\r\n    switch (e.target.value) {\r\n      case \"hashrate\":\r\n        this.sortByHashrate(newState);\r\n        break;\r\n\r\n      case \"profit\":\r\n        this.sortByProfit(newState);\r\n        break;\r\n\r\n      case \"newest\":\r\n        this.sortByNewest(newState);\r\n        break;\r\n\r\n      default:\r\n        this.sortByCoins(newState);\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleTimeChange(e) {\r\n    if (localStorage.getItem('time') !== e.target.value) {\r\n      localStorage.setItem(\"time\", e.target.value);\r\n      this.updateHashrate({ time: e.target.value });\r\n    }\r\n  }\r\n\r\n  updateMinimumUsdBuyOrders(e) {\r\n    localStorage.setItem(\"minimumUsdBuyOrdersV2\", e.target.value);\r\n    // eslint-disable-next-line\r\n    const changeTime = this.state.minimumUsdBuyOrders === e.target.value\r\n      ? this.state.changeTime\r\n      : new Date().getTime();\r\n    this.setState({ minimumUsdBuyOrders: e.target.value, changeTime });\r\n  }\r\n\r\n  handleExchangeChange(e) {\r\n    var exchangeName = e.target.textContent;\r\n    var exchangeEnabled = _.result(\r\n      localStorage,\r\n      exchangeName,\r\n      true\r\n    ).toString() === \"true\"\r\n      ? \"false\"\r\n      : \"true\";\r\n    localStorage.setItem(exchangeName, exchangeEnabled);\r\n    var stateActiveExchanges = _.clone(this.state.stateActiveExchanges);\r\n    stateActiveExchanges[exchangeName] = exchangeEnabled;\r\n    this.setState({ stateActiveExchanges, changeTime: new Date().getTime() });\r\n  }\r\n\r\n  toggleExchangesOff() {\r\n    var newExchangeState = {};\r\n    _.each(this.state.stateActiveExchanges, function(value, key) {\r\n      newExchangeState[key] = \"false\";\r\n    });\r\n    this.setState({ stateActiveExchanges: newExchangeState, changeTime: new Date().getTime() });\r\n  }\r\n\r\n  toggleExchangesOn() {\r\n    var newExchangeState = {};\r\n    _.each(this.state.stateActiveExchanges, function(value, key) {\r\n      newExchangeState[key] = \"true\";\r\n    });\r\n    this.setState({ stateActiveExchanges: newExchangeState, changeTime: new Date().getTime() });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      coins,\r\n      showTraded,\r\n      showUntraded,\r\n      showAsic,\r\n      showNonAsic,\r\n      shownicehash,\r\n      showNonnicehash,\r\n      activeAlgos,\r\n      stateActiveExchanges,\r\n      totalCoins,\r\n      totalTradedCoins,\r\n      minimumUsdBuyOrders,\r\n      showExtraDetails,\r\n    } = this.state;\r\n\r\n    const activeCoinAlgos = {};\r\n    _.map(activeAlgos, (value, key) => {\r\n      activeCoinAlgos[key] = value;\r\n    });\r\n\r\n    if (totalCoins === 0) {\r\n      return <div />;\r\n    }\r\n    let toggleAlgo_cryptonight = this.toggleCoinAlgo.bind(this, \"cryptonight\");\r\n    let toggleAlgo_lite = this.toggleCoinAlgo.bind(this, \"cryptonight_lite\");\r\n    let toggleAlgo_heavy = this.toggleCoinAlgo.bind(this, \"cryptonight_heavy\");\r\n    let toggleAlgo_monero = this.toggleCoinAlgo.bind(\r\n      this,\r\n      \"cryptonight_monero\"\r\n    );\r\n    let toggleAlgo_v8 = this.toggleCoinAlgo.bind(this, \"cryptonight_v8\");\r\n    let toggleAlgo_dark = this.toggleCoinAlgo.bind(this, \"cryptonight_dark\");\r\n    let toggleAlgo_upx = this.toggleCoinAlgo.bind(this, \"cryptonight_upx\");\r\n    let toggleAlgo_adaptive = this.toggleCoinAlgo.bind(\r\n      this,\r\n      \"cryptonight_adaptive\"\r\n    );\r\n    let toggleAlgo_aeon = this.toggleCoinAlgo.bind(this, \"cryptonight_aeon\");\r\n    let toggleAlgo_alloy = this.toggleCoinAlgo.bind(this, \"cryptonight_alloy\");\r\n    let toggleAlgo_marketcash = this.toggleCoinAlgo.bind(\r\n      this,\r\n      \"cryptonight_marketcash\"\r\n    );\r\n    let toggleAlgo_arto = this.toggleCoinAlgo.bind(this, \"cryptonight_arto\");\r\n    let toggleAlgo_turtle = this.toggleCoinAlgo.bind(this, \"cryptonight_turtle\");\r\n    let toggleAlgo_haven = this.toggleCoinAlgo.bind(this, \"cryptonight_haven\");\r\n    let toggleAlgo_stellite = this.toggleCoinAlgo.bind(\r\n      this,\r\n      \"cryptonight_stellite\"\r\n    );\r\n    let toggleAlgo_b2n = this.toggleCoinAlgo.bind(this, \"cryptonight_b2n\");\r\n    let toggleAlgo_saber = this.toggleCoinAlgo.bind(this, \"cryptonight_saber\");\r\n    let toggleAlgo_fast = this.toggleCoinAlgo.bind(this, \"cryptonight_fast\");\r\n    let toggleAlgo_keccak = this.toggleCoinAlgo.bind(this, \"wild_keccak\");\r\n\r\n    var timeChecked = {\r\n      latest: \"\",\r\n      daily: \"\",\r\n      hourly: \"\",\r\n      weekly: \"\",\r\n      monthly: \"\"\r\n    };\r\n\r\n    timeChecked[this.state.time] = \"checked\";\r\n\r\n    var timeCheckedClass = {\r\n      latest: \"btn btn-secondary\",\r\n      daily: \"btn btn-secondary\",\r\n      hourly: \"btn btn-secondary\",\r\n      weekly: \"btn btn-secondary\",\r\n      monthly: \"btn btn-secondary\"\r\n    };\r\n\r\n    timeCheckedClass[this.state.time] = \"btn btn-primary active\";\r\n\r\n    var showExtraDetailsClass = showExtraDetails.toString() === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n\r\n    var tradedActiveClass = showTraded.toString() === \"true\"\r\n      ? \"btn btn-primary active mr-2 mt-2\"\r\n      : \"btn btn-secondary mr-2 mt-2\";\r\n    var untradedActiveClass = showUntraded.toString() === \"true\"\r\n      ? \"btn btn-primary active mr-2 mt-2\"\r\n      : \"btn btn-secondary mr-2 mt-2\";\r\n    var asicActiveClass = showAsic.toString() === \"true\"\r\n      ? \"btn btn-primary active mr-2 mt-2\"\r\n      : \"btn btn-secondary mr-2 mt-2\";\r\n    var nonAsicActiveClass = showNonAsic.toString() === \"true\"\r\n      ? \"btn btn-primary active mr-2 mt-2\"\r\n      : \"btn btn-secondary mr-2 mt-2\";\r\n    var nicehashActiveClass = shownicehash.toString() === \"true\"\r\n      ? \"btn btn-primary active mr-2 mt-2\"\r\n      : \"btn btn-secondary mr-2 mt-2\";\r\n    var nonnicehashActiveClass = showNonnicehash.toString() === \"true\"\r\n      ? \"btn btn-primary active mr-2 mt-2\"\r\n      : \"btn btn-secondary mt-2\";\r\n\r\n    var advancedHashActiveClass = \"btn btn-secondary\";\r\n\r\n    var advancedHash = {\r\n      display: \"none\"\r\n    };\r\n\r\n    if (this.state.showAdvanced === \"true\") {\r\n      advancedHashActiveClass = \"btn btn-primary active\";\r\n      delete advancedHash.display;\r\n    }\r\n\r\n    var cryptonightActiveClass = activeAlgos.cryptonight === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var liteActiveClass = activeAlgos.cryptonight_lite === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var heavyActiveClass = activeAlgos.cryptonight_heavy === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var moneroActiveClass = activeAlgos.cryptonight_monero === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var v8ActiveClass = activeAlgos.cryptonight_v8 === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var darkActiveClass = activeAlgos.cryptonight_dark === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var upxActiveClass = activeAlgos.cryptonight_upx === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var adaptiveActiveClass = activeAlgos.cryptonight_adaptive === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var aeonActiveClass = activeAlgos.cryptonight_aeon === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var alloyActiveClass = activeAlgos.cryptonight_alloy === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var marketcashActiveClass = activeAlgos.cryptonight_marketcash === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var artoActiveClass = activeAlgos.cryptonight_arto === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var turtleActiveClass = activeAlgos.cryptonight_turtle === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var havenActiveClass = activeAlgos.cryptonight_haven === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var stelliteActiveClass = activeAlgos.cryptonight_stellite === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var b2nActiveClass = activeAlgos.cryptonight_b2n === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var saberActiveClass = activeAlgos.cryptonight_saber === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var fastActiveClass = activeAlgos.cryptonight_fast === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n    var keccakActiveClass = activeAlgos.wild_keccak === \"true\"\r\n      ? \"btn btn-primary active\"\r\n      : \"btn btn-secondary\";\r\n\r\n    var exchangeButtonsDom = [];\r\n    var exchangeButtonsDomTwo = [];\r\n    var ae = [];\r\n    _.each(Util.coinActiveExchanges, function(n, key) {\r\n      ae.push(key);\r\n    });\r\n    ae.sort();\r\n    _.each(ae, (exchangeName, idx) => {\r\n      var exchangeEnabled = stateActiveExchanges[exchangeName];\r\n      var exchangeClass = exchangeEnabled.toString() === \"true\"\r\n        ? \"btn btn-primary active mr-2 mt-2\"\r\n        : \"btn btn-secondary mr-2 mt-2\";\r\n      var exchangeEl = <span key={idx}>\r\n          <button\r\n            className={exchangeClass}\r\n            type=\"button\"\r\n            data-toggle=\"button\"\r\n            aria-pressed=\"false\"\r\n            autoComplete=\"off\"\r\n            onClick={this.handleExchangeChange}\r\n          >\r\n            {exchangeName}\r\n          </button>\r\n          &nbsp;\r\n        </span>;\r\n      if (idx <= ae.length / 2) {\r\n        exchangeButtonsDom.push(exchangeEl);\r\n      } else {\r\n        exchangeButtonsDomTwo.push(exchangeEl);\r\n      }\r\n    });\r\n    return (\r\n      <div className=\"App container-fluid\">\r\n        <div className=\"row pl-3 pr-3 pt-2 pb-0\">\r\n          <div className=\"pl-3 pr-3\">\r\n            Tracking\r\n            {\" \"}\r\n            {totalCoins}\r\n            {\" \"}\r\n            Cryptonote coins and profit data for\r\n            {\" \"}\r\n            {totalTradedCoins}\r\n            {\" \"}\r\n            traded coins.\r\n          </div>\r\n        </div>\r\n        <div className=\"row pl-3 pr-3 pb-0\">\r\n          <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">GPU h/s</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"cryptonight_moneroGpu\"\r\n                className=\"form-control\"\r\n                placeholder=\"GPU CNv8 h/s\"\r\n                onChange={this.updateMasterHashrate}\r\n                value={this.state.algorithms[\"cryptonight_moneroGpu\"] || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">CPU h/s</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"cryptonight_moneroCpu\"\r\n                className=\"form-control\"\r\n                placeholder=\"CPU CNv8 h/s\"\r\n                onChange={this.updateMasterHashrate}\r\n                value={this.state.algorithms[\"cryptonight_moneroCpu\"] || \"\"}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Sort By</span>\r\n              </div>\r\n              <select\r\n                className=\"form-control\"\r\n                value={this.state.sort}\r\n                onChange={this.handleSortChange}\r\n              >\r\n                <option value=\"profit\">Profit</option>\r\n                <option value=\"hashrate\">Hashrate</option>\r\n                <option value=\"coins\">Coins Earned</option>\r\n                <option value=\"newest\">Most Recently Added</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Timespan</span>\r\n              </div>\r\n              <select\r\n                className=\"form-control\"\r\n                value={this.state.time}\r\n                onChange={this.handleTimeChange}\r\n              >\r\n                <option value=\"latest\">Latest</option>\r\n                <option value=\"hourly\">Hourly</option>\r\n                <option value=\"daily\">Daily</option>\r\n                <option value=\"weekly\">Weekly</option>\r\n                <option value=\"monthly\">Monthly</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n            <button\r\n              type=\"button\"\r\n              className={advancedHashActiveClass}\r\n              data-toggle=\"button\"\r\n              aria-pressed=\"false\"\r\n              autoComplete=\"off\"\r\n              onClick={this.toggleAdvancedHash}\r\n            >\r\n              advanced options\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div style={advancedHash}>\r\n          <div className=\"row pl-3 pr-3 pb-0\">\r\n            <div className=\"col\">\r\n              <button\r\n                type=\"button\"\r\n                className={nonAsicActiveClass}\r\n                data-toggle=\"button\"\r\n                aria-pressed=\"false\"\r\n                autoComplete=\"off\"\r\n                onClick={this.toggleNonAsicCoins}\r\n              >\r\n                non-asic coins\r\n              </button>&nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className={asicActiveClass}\r\n                data-toggle=\"button\"\r\n                aria-pressed=\"false\"\r\n                autoComplete=\"off\"\r\n                onClick={this.toggleAsicCoins}\r\n              >\r\n                asic coins\r\n              </button>&nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className={nonnicehashActiveClass}\r\n                data-toggle=\"button\"\r\n                aria-pressed=\"false\"\r\n                autoComplete=\"off\"\r\n                onClick={this.toggleNonnicehashCoins}\r\n              >\r\n                non-nicehash coins\r\n              </button>&nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className={nicehashActiveClass}\r\n                data-toggle=\"button\"\r\n                aria-pressed=\"false\"\r\n                autoComplete=\"off\"\r\n                onClick={this.togglenicehashCoins}\r\n              >\r\n                nicehash coins\r\n              </button>&nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className={tradedActiveClass}\r\n                data-toggle=\"button\"\r\n                aria-pressed=\"false\"\r\n                autoComplete=\"off\"\r\n                onClick={this.toggleTradedCoins}\r\n              >\r\n                traded coins\r\n              </button>&nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className={untradedActiveClass}\r\n                data-toggle=\"button\"\r\n                aria-pressed=\"false\"\r\n                autoComplete=\"off\"\r\n                onClick={this.toggleUntradedCoins}\r\n              >\r\n                untraded coins\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-2 pl-3 pr-3 pb-0\">\r\n            <div className=\"col\">\r\n              <div className=\"info\">\r\n                Click or tap on any\r\n                {\" \"}\r\n                <span className=\"btn btn-primary btn-sm mb-1\">button</span>\r\n                {\" \"}\r\n                to toggle that value\r\n                {\" \"}\r\n                <span className=\"btn btn-primary btn-sm mb-1\">on</span>\r\n                {\" \"}\r\n                and\r\n                {\" \"}\r\n                <span className=\"btn btn-secondary btn-sm mb-1\">off</span>\r\n                . Closing the\r\n                {\" \"}\r\n                <span className=\"btn btn-primary btn-sm\">advanced options</span>\r\n                {\" \"}\r\n                panel does not disable your changes. All changes are saved as they happen and your configuation persists.\r\n                <br />\r\n                Hashrate values can be changed here for individual algorithms but all hashrates will be re-calculated if the main GPU or CPU values are adjusted. If you feel the calculations are incorrect please reach out with more information to us at\r\n                {\" \"}\r\n                <a href=\"mailto:coins@triforcecoin.com\">\r\n                  coins@triforcecoin.com\r\n                </a>\r\n                .\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row pl-3 pr-3 pb-0\">\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_Hashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={cryptonightActiveClass}\r\n                    onClick={toggleAlgo_cryptonight}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    cryptonight\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_liteHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_lite\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={liteActiveClass}\r\n                    onClick={toggleAlgo_lite}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    lite\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_heavyHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_heavy\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={heavyActiveClass}\r\n                    onClick={toggleAlgo_heavy}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    heavy\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_moneroHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_monero\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={moneroActiveClass}\r\n                    onClick={toggleAlgo_monero}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    monero v7\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_aeonHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_aeon\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={aeonActiveClass}\r\n                    onClick={toggleAlgo_aeon}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    aeon\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_artoHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_arto\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={artoActiveClass}\r\n                    onClick={toggleAlgo_arto}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    arto\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_havenHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_haven\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={havenActiveClass}\r\n                    onClick={toggleAlgo_haven}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    haven\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_stelliteHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_stellite\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={stelliteActiveClass}\r\n                    onClick={toggleAlgo_stellite}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    stellite\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_b2nHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_b2n\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={b2nActiveClass}\r\n                    onClick={toggleAlgo_b2n}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    b2n\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_saberHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_saber\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={saberActiveClass}\r\n                    onClick={toggleAlgo_saber}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    saber\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_alloyHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_alloy\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={alloyActiveClass}\r\n                    onClick={toggleAlgo_alloy}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    alloy\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_marketcashHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_marketcash\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={marketcashActiveClass}\r\n                    onClick={toggleAlgo_marketcash}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    marketcash\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_fastHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_fast\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={fastActiveClass}\r\n                    onClick={toggleAlgo_fast}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    fast\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"wild_keccakHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"wild_keccak\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={keccakActiveClass}\r\n                    onClick={toggleAlgo_keccak}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    wild keccak\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_v8Hashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_v8\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={v8ActiveClass}\r\n                    onClick={toggleAlgo_v8}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    monero v8\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_darkHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_dark\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={darkActiveClass}\r\n                    onClick={toggleAlgo_dark}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    dark\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_upxHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_upx\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={upxActiveClass}\r\n                    onClick={toggleAlgo_upx}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    upx\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_adaptiveHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_adaptive\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={adaptiveActiveClass}\r\n                    onClick={toggleAlgo_adaptive}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    adaptive\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xs col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cryptonight_turtleHashrate\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateHashrate}\r\n                  value={this.state.algorithms[\"cryptonight_turtle\"]}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={turtleActiveClass}\r\n                    onClick={toggleAlgo_turtle}\r\n                    data-toggle=\"button\"\r\n                    aria-pressed=\"false\"\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    turtle\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row pl-3 pr-3 pb-0 mt-2\">\r\n            <div className=\"col\">\r\n              Toggle all exchanges:\r\n              {\" \"}\r\n              <span className=\"btn btn-primary btn-sm mb-1\" onClick={this.toggleExchangesOn}>on</span>\r\n              {\" \"}\r\n              <span className=\"btn btn-secondary btn-sm mb-1\" onClick={this.toggleExchangesOff}>off</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row pl-3 pr-3 pb-0\">\r\n            <div className=\"col\">\r\n              {exchangeButtonsDom}\r\n            </div>\r\n          </div>\r\n          <div className=\"row pl-3 pr-3 pb-0\">\r\n            <div className=\"col\">\r\n              {exchangeButtonsDomTwo}\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-2 pl-3 pr-3 pb-0\">\r\n            <div className=\"col-3 col-sm-6 col-md-4 col-lg-3\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                    Minimum USD Buy Orders\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"minimumUsdBuyOrders\"\r\n                  className=\"form-control\"\r\n                  onChange={this.updateMinimumUsdBuyOrders}\r\n                  value={this.state.minimumUsdBuyOrders}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className={showExtraDetailsClass}\r\n                data-toggle=\"button\"\r\n                aria-pressed=\"false\"\r\n                autoComplete=\"off\"\r\n                onClick={this.toggleShowExtraDetails}\r\n              > show extra details\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <CoinList\r\n          coins={coins}\r\n          stateActiveExchanges={stateActiveExchanges}\r\n          activeAlgos={activeCoinAlgos}\r\n          showTraded={showTraded}\r\n          showUntraded={showUntraded}\r\n          minimumUsdBuyOrders={minimumUsdBuyOrders}\r\n          sort={this.state.sort}\r\n          time={this.state.time}\r\n          showExtraDetails={this.state.showExtraDetails === \"true\"}\r\n        />\r\n        <div className=\"footer p-3 pb-0\">\r\n          <p>\r\n            Data provided does not promise anything. Methodology is to take the highest bid or buy price as the base value of the coin. That way coins that fluctuate between 1 and 2 sat will not jump about wildly. The exchange listed is the one with the highest volume not highest price. The only true values are the latest values. The rest of the values use something called a harmonic mean because it just felt more right than an average when looking at the resulting numbers. So hourly, daily, weekly and monthly values are harmonic means taken from all of the latest data points collected over that period of time.\r\n          </p>\r\n          <p>\r\n            Contact\r\n            {\" \"}\r\n            <a href=\"mailto:coins@triforcecoin.com\">coins@triforcecoin.com</a>\r\n            {\" \"}\r\n            or\r\n            {\" \"}\r\n            <a\r\n              href=\"https://twitter.com/triforcecoin\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              @triforcecoin\r\n            </a>\r\n            {\" \"}\r\n            with questions, bugs or coins that need to be added.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { PureComponent } from \"react\";\r\nimport $ from \"jquery\";\r\nimport _ from \"lodash\";\r\nimport Util from \"./Util\";\r\nimport neatCsv from \"neat-csv\";\r\n\r\nclass CoinInfo extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      coinId: props.match.params.name,\r\n      coinData: undefined\r\n    };\r\n  }\r\n\r\n  onError(e) {\r\n    $(e.target).remove();\r\n  }\r\n\r\n  componentDidMount() {\r\n    var coinId = this.state.coinId;\r\n    if (Util.exchangeData.length === 0) {\r\n      var coinDataPromise = fetch(`..\\\\coinInfo.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n      var latestDataPromise = fetch(`..\\\\coinValuesLatest.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n      var poolDataPromise = fetch(`..\\\\poolDataLatest.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n      var poolInfoPromise = fetch(`..\\\\poolInfo.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n      var exchangePromise = fetch(`..\\\\exchangeData.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n\r\n      Promise.all([\r\n        coinDataPromise,\r\n        latestDataPromise,\r\n        poolInfoPromise,\r\n        poolDataPromise,\r\n        exchangePromise\r\n      ]).then(values => {\r\n        Util.generalCoinData = values[0];\r\n        Util.latestCoinData = values[1];\r\n        Util.exchangeData = values[4];\r\n\r\n        const coinData = _.find(Util.generalCoinData, function(o) {\r\n          return (\r\n            coinId.toLowerCase() ===\r\n            o[\"symbol\"].toLowerCase() +\r\n              \"-\" +\r\n              o[\"coinName\"].replace(/\\s|'/g, \"\").toLowerCase()\r\n          );\r\n        });\r\n\r\n        const coinLatestData = _.find(Util.latestCoinData, [\r\n          \"coinId\",\r\n          coinData.coinId\r\n        ]);\r\n\r\n        Util.generalPoolData = values[2];\r\n        Util.latestPoolData = values[3];\r\n\r\n        if (_.isUndefined(coinData)) return;\r\n\r\n        const poolList = _.filter(Util.generalPoolData, [\"coinId\", coinData.coinId]);\r\n        _.each(poolList, (value, key) => {\r\n          const poolData = _.find(Util.latestPoolData, [\"poolId\", value.poolId]) || {\r\n          };\r\n          _.assign(poolList[key], poolData);\r\n        });\r\n\r\n        const exchangeList = _.filter(Util.exchangeData, [\r\n          \"coinId\",\r\n          coinData.coinId\r\n        ]);\r\n\r\n        this.setState({\r\n          coinData: Util.getCoinData(coinData, coinLatestData),\r\n          poolList,\r\n          exchangeList,\r\n          changeTime: new Date().getTime()\r\n        });\r\n      });\r\n    } else {\r\n      const coinData = _.find(Util.generalCoinData, function(o) {\r\n        return (\r\n          coinId.toLowerCase() ===\r\n          o[\"symbol\"].toLowerCase() +\r\n            \"-\" +\r\n            o[\"coinName\"].replace(/\\s|'/g, \"\").toLowerCase()\r\n        );\r\n      });\r\n\r\n      const coinLatestData = _.find(Util.latestCoinData, [\r\n        \"coinId\",\r\n        coinData.coinId\r\n      ]);\r\n\r\n      if (_.isUndefined(coinData)) return;\r\n\r\n      const poolList = _.filter(Util.generalPoolData, [\"coinId\", coinData.coinId]);\r\n      _.each(poolList, (value, key) => {\r\n        const poolData = _.find(Util.latestPoolData, [\"poolId\", value.poolId]) || {};\r\n        _.assign(poolList[key], poolData);\r\n      });\r\n\r\n      const exchangeList = _.filter(Util.exchangeData, [\"coinId\", coinData.coinId]);\r\n\r\n      this.setState({\r\n        coinData: Util.getCoinData(coinData, coinLatestData),\r\n        poolList,\r\n        exchangeList,\r\n        changeTime: new Date().getTime()\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { coinData, poolList } = this.state;\r\n\r\n    if (_.isUndefined(coinData)) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"pr-3 pl-3 pt-3 pb-0\">\r\n            <div>Coin data missing!</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    var imgSrc = \"/logos/resize/\" + coinData.symbol.toLowerCase() + \".png\";\r\n\r\n    var sortedArray = [];\r\n    _.each(coinData.links, function(value, key) {\r\n      sortedArray.push({ linkKey: key, linkValue: value });\r\n    });\r\n\r\n    sortedArray = _.sortBy(sortedArray, [\"linkKey\"]);\r\n\r\n    var generalLinks = [];\r\n    _.each(sortedArray, function(link) {\r\n      var value = link.linkValue;\r\n      var key = link.linkKey;\r\n      var className = \"fab fa-2x fa-\" + key;\r\n      var linkText = _.capitalize(key);\r\n\r\n      if (key === \"website\") {\r\n        className = \"fas fa-2x fa-home\";\r\n      }\r\n      if (key === \"bitcointalkAnn\") {\r\n        className = \"fab fa-2x fa-bitcoin\";\r\n        linkText = \"BitcoinTalk Announcement\";\r\n      }\r\n      if (key === \"repo\") {\r\n        className = \"fab fa-2x fa-github\";\r\n        linkText = \"Source Code\";\r\n      }\r\n\r\n      generalLinks.push(\r\n        <li className=\"p-2\" key={key}>\r\n          <span className=\"fa-li\"><i className={className} /></span>\r\n          {\" \"}\r\n          <a\r\n            href={value}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            title={linkText}\r\n          >\r\n            {linkText}\r\n          </a>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let poolElements = [];\r\n    _.each(poolList, (value, key) => {\r\n      const hashrate = value.hashrate + '' === '-1' ? 'NA' : Util.millify(value.hashrate, 3);\r\n      const miners = value.miners + '' === '-1' ? 'NA' : value.miners;\r\n\r\n      poolElements.push(\r\n        <tr key={key}>\r\n          <td><a href={value.url}>{value.url}</a></td>\r\n          <td>{miners}</td>\r\n          <td>{hashrate}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    let poolHeader = \"\";\r\n\r\n    if (poolElements.length) {\r\n      poolHeader = <h2>Pools</h2>;\r\n    }\r\n\r\n    poolElements = (\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              Pool\r\n            </th>\r\n            <th>\r\n              Miners\r\n            </th>\r\n            <th>\r\n              Hashrate\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {poolElements}\r\n        </tbody>\r\n      </table>\r\n    );\r\n\r\n    let exchangeElements = [];\r\n    _.each(coinData.exchangeIds, (exchangeId, key) => {\r\n      const exchangeName = Util.exchangeNames[exchangeId];\r\n      const exchange = _.find(Util.exchangeData, (value, index) => {\r\n        if (value.exchangeId === exchangeId && value.coinId === coinData.coinId) {\r\n          return value;\r\n        }\r\n      })\r\n\r\n      if (!exchange) return;\r\n\r\n      exchangeElements.push(\r\n        <tr key={key}>\r\n          <td>\r\n            <a href={Util.exchangeLinks[exchangeName]}>{exchangeName}</a>\r\n          </td>\r\n          <td>\r\n            {exchange.activePairs}\r\n          </td>\r\n          <td>\r\n            {exchange.bestPair}\r\n          </td>\r\n          <td>\r\n            {Number(exchange.satoshiPrice).noExponents()}\r\n          </td>\r\n          <td>\r\n            {Number(exchange.usdPrice).noExponents()}\r\n          </td>\r\n          <td>\r\n            {Number(exchange.sellTotal).noExponents()}\r\n          </td>\r\n          <td>\r\n            {Number(exchange.sellTotalBtc).noExponents()}\r\n          </td>\r\n          <td>\r\n            {Number(exchange.buyTotal).noExponents()}\r\n          </td>\r\n          <td>\r\n            {Number(exchange.buyTotalBtc).noExponents()}\r\n          </td>\r\n          <td>\r\n            {new Date(exchange.created.split(' ').join('T')+'.000Z').toISOString()}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    let exchangeHeader = \"\";\r\n\r\n    if (exchangeElements.length) {\r\n      exchangeHeader = <h2>Exchanges</h2>;\r\n\r\n      exchangeElements = (\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                Exchange\r\n              </th>\r\n              <th>\r\n                Active Pairs\r\n              </th>\r\n              <th>\r\n                Best Pair\r\n              </th>\r\n              <th>\r\n                BTC\r\n              </th>\r\n              <th>\r\n                USD\r\n              </th>\r\n              <th>\r\n                Total Coins on Sale\r\n              </th>\r\n              <th>\r\n                Total BTC on Sale\r\n              </th>\r\n              <th>\r\n                Total Coins on Order\r\n              </th>\r\n              <th>\r\n                Total BTC on Order\r\n              </th>\r\n              <th>\r\n                Pull Time\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {exchangeElements}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"pl-3 pr-3 pt-3 pb-0\">\r\n          <h1>\r\n            <img\r\n              alt={coinData.coinName + \" logo\"}\r\n              src={imgSrc}\r\n              onError={this.onError}\r\n            />\r\n            {\" \"}\r\n            {coinData.symbol}\r\n            {\" \"}\r\n            {coinData.coinName}\r\n          </h1>\r\n          <h2>Links</h2>\r\n          <ul className=\"fa-ul\">\r\n            {generalLinks}\r\n          </ul>\r\n          {poolHeader}\r\n          {poolElements}\r\n          {exchangeHeader}\r\n          {exchangeElements}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoinInfo;\r\n","import React, { PureComponent } from \"react\";\r\nimport _ from \"lodash\";\r\nimport CoinList from \"./CoinList\";\r\nimport Util from \"./Util\";\r\nimport neatCsv from \"neat-csv\";\r\n\r\nclass Inactive extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      coins: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (Util.generalCoinData.length === 0) {\r\n    var inactiveDataPromise = fetch(`..\\\\coinInfo.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n    var latestDataPromise = fetch(`..\\\\coinValuesLatest.csv`).then(res => res.text()).then(data => neatCsv(data));\r\n\r\n    Promise.all([inactiveDataPromise, latestDataPromise]).then(values => {\r\n      Util.generalCoinData = values[0];\r\n      Util.latestCoinData = values[1];\r\n\r\n      var latest = [];\r\n      const extra = [];\r\n      _.each(Util.generalCoinData, value => {\r\n        const coin = _.find(Util.latestCoinData, [\"coinId\", value.coinId]);\r\n        if (!value.enabled) {\r\n          const parsedCoin = Util.getCoinData(value, coin);\r\n          if (parsedCoin.updatedRaw) {\r\n            latest.push(parsedCoin);\r\n          } else {\r\n            extra.push(parsedCoin);\r\n          }\r\n        }\r\n      });\r\n\r\n      latest.sort(function(coinA, coinB) {\r\n        return coinB.updatedRaw - coinA.updatedRaw;\r\n      });\r\n\r\n      latest = latest.concat(extra);\r\n\r\n      this.setState({\r\n        coins: latest,\r\n        changeTime: new Date().getTime()\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { coins } = this.state;\r\n    const { showExtraDetails } = this.props;\r\n    const inactiveCoins = coins.length;\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"pb-0 pr-3 pt-3 pl-3\">\r\n          There are\r\n          {\" \"}\r\n          {inactiveCoins}\r\n          {\" \"}\r\n          inactive coins. These are ordered by the last time we received data for their blockchain most recent first. Of the last few coins they might be actually active but we've never recieved data for them.\r\n        </div>\r\n        <CoinList\r\n          coins={coins}\r\n          inactiveCoins={true}\r\n          showExtraDetails={showExtraDetails === \"true\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inactive;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// The Header creates links that can be used to navigate\r\n// between routes.\r\nconst Header = () => (\r\n  <header>\r\n    <nav className=\"navbar navbar-expand-lg\">\r\n      <img\r\n        src=\"/triforcecoin.png\"\r\n        width=\"30\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top mr-2\"\r\n        alt=\"\"\r\n      />\r\n      <div className=\"mr-auto\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <NavLink className=\"nav-link\" exact to=\"/\">Active Coins</NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/inactive\">Inactive Coins</NavLink>\r\n        </ul>\r\n      </div>\r\n      <div className=\"header-links pr-2\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6 px-2\">\r\n            <a\r\n              href=\"https://discord.gg/h6kA2JS\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fab fa-discord\" />\r\n            </a>\r\n          </div>\r\n          <div className=\"col-6 px-2\">\r\n            <a\r\n              href=\"https://twitter.com/triforcecoin\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fab fa-twitter\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import \"./App.css\";\r\nimport Home from \"./Home\";\r\nimport CoinInfo from \"./CoinInfo\";\r\nimport Inactive from \"./Inactive\";\r\nimport Header from \"./Header\";\r\nimport $ from \"jquery\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n$(window).keydown(function(event) {\r\n  if(event.ctrlKey && event.keyCode === 70) {\r\n    event.preventDefault();\r\n    $('#filterSearch').focus();\r\n  }\r\n});\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/coins/:name\" component={CoinInfo} />\r\n      <Route path=\"/inactive\" component={Inactive} />\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Header />\r\n    <Main />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { render } from 'react-dom';\nimport { unregister } from './registerServiceWorker';\n\nconst $ = require('jquery');\nwindow.$ = $;\nwindow.jQuery = $;\nrequire('bootstrap/dist/js/bootstrap.bundle.min');\n// require('@fortawesome/fontawesome-pro/js/brands.min');\n// require('@fortawesome/fontawesome-pro/js/solid.min');\n\nrender((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nunregister()\n","import moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Decimal } from \"decimal.js\";\r\n\r\nclass Utils {\r\n  constructor() {\r\n   if(!Utils.instance){\r\n    // eslint-disable-next-line\r\n    Number.prototype.noExponents = function() {\r\n      var data = String(this).split(/[eE]/);\r\n      if (data.length === 1) return data[0];\r\n\r\n      var z = \"\",\r\n        sign = this < 0 ? \"-\" : \"\",\r\n        str = data[0].replace(\".\", \"\"),\r\n        mag = Number(data[1]) + 1;\r\n\r\n      if (mag < 0) {\r\n        z = sign + \"0.\";\r\n        while (mag++)\r\n          z += \"0\";\r\n        // eslint-disable-next-line\r\n        return z + str.replace(/^\\-/, \"\");\r\n      }\r\n      mag -= str.length;\r\n      while (mag--)\r\n        z += \"0\";\r\n      return str + z;\r\n    };\r\n\r\n    this.generalCoinData = [];\r\n    this.latestCoinData = [];\r\n    this.generalPoolData = [];\r\n    this.latestPoolData = [];\r\n    this.exchangeData = [];\r\n\r\n    this.exchangeLinks = {\r\n      Kucoin: \"https://www.kucoin.com/#/?r=7hRKtH\",\r\n      Cryptopia: \"https://www.cryptopia.co.nz/Register?referrer=sosuke\",\r\n      Southxchange: \"https://www.southxchange.com/?referrer=triforcecoin\",\r\n      TradeOgre: \"https://tradeogre.com/?referrer=triforcecoin\",\r\n      StocksExchange: \"https://app.stex.com?ref=44564496\",\r\n      Octaex: \"https://www.octaex.com/?invit=BU738433\",\r\n      TradeSatoshi: \"https://tradesatoshi.com/?referrer=triforcecoin\",\r\n      Qryptos: \"https://accounts.qryptos.com/sign-up?affiliate=fhU-E0zN269272\",\r\n      Cryptohub: \"https://cryptohub.online/?ref=20758\",\r\n      Livecoin: \"https://livecoin.net/?from=Livecoin-Kg4t5CBz\",\r\n      \"BTC-Alpha\": \"https://btc-alpha.com/?r=78448\",\r\n      Crex24: \"https://crex24.com/?refid=ievnhyqxeglqqkwxfihc\",\r\n      Palitanx: \"https://palitanx.com/?referrer=triforcecoin\",\r\n      Altex: \"https://altex.exchange/register&ref=1114\",\r\n      MapleChange: \"https://www.maplechange.com?ref=354\",\r\n      BitexLive: \"https://bitexlive.com/register?refLink=Bitexlive_Rf2009\",\r\n      Kompler: \"https://www.kompler.exchange/#/signup/DLU5014267\",\r\n      BitexBay: \"https://www.bitexbay.com/Home/Reg/reg/Member_id/113596.html\",\r\n      BitexBook: \"https://bitexbook.com/?ref=bpFzum\",\r\n      Graviex: \"https://graviex.net\",\r\n      Bittrex: \"https://bittrex.com\",\r\n      FirstCryptoBank: \"https://exfcb.com\",\r\n      Primex: \"https://primex.xyz\",\r\n      Escodex: \"http://escodex.com\",\r\n      Bisq: \"https://bisq.network\",\r\n      Raisex: \"https://raisex.io\",\r\n      Bitebtc: \"https://bitebtc.com\",\r\n      Finexbox: \"https://www.finexbox.com/Reg/register/referrer/308980.html\",\r\n    };\r\n\r\n    this.exchangeNames = [\r\n      \"\",\r\n      \"Kucoin\",\r\n      \"Cryptopia\",\r\n      \"Southxchange\",\r\n      \"TradeOgre\",\r\n      \"StocksExchange\",\r\n      \"Octaex\",\r\n      \"TradeSatoshi\",\r\n      \"Qryptos\",\r\n      \"Cryptohub\",\r\n      \"Livecoin\",\r\n      \"BTC-Alpha\",\r\n      \"Crex24\",\r\n      \"Palitanx\",\r\n      \"Altex\",\r\n      \"MapleChange\",\r\n      \"BitexLive\",\r\n      \"Kompler\",\r\n      \"BitexBay\",\r\n      \"BitexBook\",\r\n      \"Graviex\",\r\n      \"Bittrex\",\r\n      \"FirstCryptoBank\",\r\n      \"Primex\",\r\n      \"Escodex\",\r\n      \"Bisq\",\r\n      \"Raisex\",\r\n      \"Bitebtc\",\r\n      \"Finexbox\",\r\n    ];\r\n\r\n    this.coinActiveExchanges = {};\r\n\r\n    this.getColorForPercentage = function(pct) {\r\n      let num = Math.round(pct * 1000 / 10) * 10;\r\n      return num < 130 ? num : 120;\r\n    };\r\n\r\n    this.oldOrder = 1;\r\n    if (localStorage.getItem(\"order\")) {\r\n      this.oldOrder = localStorage.getItem(\"order\").toString() === \"1\" ? 0 : 1;\r\n    }\r\n\r\n    Utils.instance = this;\r\n   }\r\n\r\n   return Utils.instance;\r\n  }\r\n\r\n  getCoinData(coin, coinDataArray, algorithms, staleTimeout) {\r\n\r\n    if (coin.coinId === \"30\") {\r\n      debugger;\r\n    }\r\n    var baseCoinData = {\r\n      coinId: coin.coinId,\r\n      symbol: coin.symbol,\r\n      coinName: coin.coinName,\r\n      algorithm: coin.algorithm,\r\n      announcementDate: moment(new Date(coin.announcementDate)).format(\r\n        \"YYYY MMMM\"\r\n      ),\r\n      diffTarget: coin.diffTarget,\r\n      asicFriendly: String(coin.asicFriendly) === '1',\r\n      nhFriendly: String(coin.nhFriendly) === '1',\r\n      exchangeIds: coin.exchanges ? coin.exchanges.split(\",\") : [],\r\n      // eslint-disable-next-line\r\n      links: coin.links ? eval(\"(\" + coin.links + \")\") : {},\r\n      updated: coin.updated,\r\n      enabled: coin.enabled,\r\n      bestPair: \"\"\r\n    };\r\n\r\n    if (!coinDataArray) {\r\n      return baseCoinData;\r\n    }\r\n\r\n  //   if (baseCoinData.coinId === 238) {\r\n  //   //console.log('Decimal(coinDataArray.satoshiValue)', Decimal(coinDataArray.satoshiValue).toString());\r\n  //   //console.log('Decimal(coinDataArray.usdValue)', Decimal(coinDataArray.usdValue).toString());\r\n  //   //console.log('Decimal(coinDataArray.buyTotalBtc)', Decimal(coinDataArray.buyTotalBtc).toString());\r\n  // }\r\n\r\n    // Decimal(\r\n    //   Decimal(coinDataArray.satoshiValue).div(\r\n    //     Decimal(coinDataArray.usdValue)).times(\r\n    //       Decimal(coinDataArray.buyTotalBtc))\r\n    // ).toNumber().toFixed(2),\r\n  //   if (baseCoinData.symbol === 'DEGO') {\r\n  //     //console.log(baseCoinData.coinId);\r\n  //   //console.log('coinDataArray.satoshiPrice', 'coinDataArray.usdPrice');\r\n  //   //console.log(Decimal(coinDataArray.usdPrice).times('1e8').toString(), Decimal(coinDataArray.usdPrice).times('1e8').toString());\r\n  // }\r\n    // var usdBtdValue = coinDataArray.satoshiValue * coinDataArray.usdValue;\r\n    // if (coin.coinId === 211) {\r\n    //   debugger;\r\n    // }\r\n    var btcPrice = Decimal(coinDataArray.satoshiPrice || '0').times(Decimal('1e8')).toNumber();\r\n    var coinData = _.assign(baseCoinData, {\r\n      networkHashrate: this.millify(coinDataArray.difficulty / coin.diffTarget, 3),\r\n      networkHashrateRaw: coinDataArray.difficulty / coin.diffTarget,\r\n      satoshiValue: Number(coinDataArray.satoshiValue).noExponents(),\r\n      mSatoshi: Decimal(Decimal(coinDataArray.satoshiValue || '0').times(Decimal('1e6'))).toNumber().toPrecision(6),\r\n      usdValue: Number(coinDataArray.usdValue).noExponents(),\r\n      nUsd: Decimal(Decimal(coinDataArray.usdValue || '0').times(Decimal('1e9'))).toNumber().toPrecision(6),\r\n      updatedRaw: coinDataArray.updated,\r\n      updated: moment(new Date(coinDataArray.updated.split(' ').join('T') + '.000Z')).fromNow(),\r\n      reward: this.millify(Number(coinDataArray.reward).noExponents(), 3),\r\n      difficulty: this.millify(Number(coinDataArray.difficulty).noExponents(), 3),\r\n      diffRaw: coinDataArray.difficulty,\r\n      exchangeName: coinDataArray.exchangeName,\r\n      exchangeLink: this.exchangeLinks[coinDataArray.exchangeName],\r\n      onExchange: coinDataArray.exchangeName && coinDataArray.exchangeName !== \"\"\r\n        ? \"exchange\"\r\n        : \"\",\r\n      volume: Number(coinDataArray.volume).toFixed(8),\r\n      volumeBtc: Number(coinDataArray.volumeBtc).toFixed(8),\r\n      btcPrice: btcPrice,\r\n      satoshiPrice: Number(coinDataArray.satoshiPrice).noExponents(),\r\n      satoshiPriceRaw: coinDataArray.satoshiPrice,\r\n      usdPrice: Number(coinDataArray.usdPrice).noExponents(),\r\n      coinValue: coinDataArray.coins,\r\n      pairPrice: Number(coinDataArray.pairPrice).noExponents(),\r\n      pairValue: Number(coinDataArray.pairValue).noExponents(),\r\n      pairInBtc: coinDataArray.pairPrice === \"\" ? 0 : Decimal(Number(coinDataArray.pairPrice)).times(Decimal(Number(coinDataArray.pairValue))).toNumber(),\r\n      pairInSatoshi: coinDataArray.pairPrice === \"\" ? 0 : Decimal(Number(coinDataArray.pairPrice)).times(Decimal(Number(coinDataArray.pairValue))).times(Decimal('1e8')).toNumber(),\r\n      buyTotalBtc: this.millify(Number(coinDataArray.buyTotalBtc).toFixed(8), 3),\r\n      buyTotalBtcRaw: coinDataArray.buyTotalBtc,\r\n      buyTotalUsd: this.millify(\r\n        Decimal(\r\n          Decimal(coinDataArray.satoshiValue).times(\r\n            Decimal(coinDataArray.usdValue)).times(\r\n              Decimal(coinDataArray.buyTotalBtc))\r\n        ).toNumber().noExponents(),\r\n        3\r\n      ),\r\n      buyTotalUsdRaw: Decimal(\r\n        Decimal(coinDataArray.satoshiValue).times(\r\n          Decimal(coinDataArray.usdValue)).times(\r\n            Decimal(coinDataArray.buyTotalBtc))\r\n      ).toNumber(),\r\n      buyColor: this.getColorForPercentage(coinDataArray.buyTotalBtc / 8),\r\n      buyTotal: this.millify(Number(coinDataArray.buyTotal).toFixed(0), 3),\r\n      buyTotalRaw: coinDataArray.buyTotal,\r\n      sellTotalBtc: Number(coinDataArray.sellTotalBtc).toFixed(8),\r\n      sellTotal: this.millify(Number(coinDataArray.sellTotal).toFixed(0), 3),\r\n      sellTotalRaw: coinDataArray.sellTotal,\r\n      created: coinDataArray.created,\r\n      activePairs: coinDataArray.activePairs\r\n        ? coinDataArray.activePairs.split(\",\")\r\n        : [],\r\n      bestPair: coinDataArray.bestPair ? coinDataArray.bestPair : \"\",\r\n      logUpdatedRaw: coinDataArray.logUpdated,\r\n      logUpdated: coinDataArray.logUpdated\r\n        ? moment(new Date(coinDataArray.logUpdated.split(' ').join('T') + '.000Z')).fromNow()\r\n        : \"\"\r\n    });\r\n    //// console.log('coinData.usdValue', coinData.usdValue);\r\n    if (coinData.exchangeIds.length) {\r\n      coinData.exchangeIds = _.map(coinData.exchangeIds, _.toInteger);\r\n      coinData.exchangeNames = _.map(coinData.exchangeIds, n => {\r\n        return Utils.instance.exchangeNames[n];\r\n      });\r\n      coinData.exchangeList = [];\r\n      coinData.exchangeNames = [];\r\n      _.each(coinData.exchangeIds, function(n) {\r\n        if (Utils.instance.exchangeNames[n] === coinData.exchangeName) {\r\n          coinData.exchangeNames.push(Utils.instance.exchangeNames[n]);\r\n          return;\r\n        }\r\n        Utils.instance.coinActiveExchanges[Utils.instance.exchangeNames[n]] = \"true\";\r\n        coinData.exchangeList.push(\r\n          <a\r\n            key={n}\r\n            href={Utils.instance.exchangeLinks[Utils.instance.exchangeNames[n]]}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {Utils.instance.exchangeNames[n]}\r\n          </a>\r\n        );\r\n        coinData.exchangeNames.push(Utils.instance.exchangeNames[n]);\r\n      });\r\n\r\n      var exchangeListEl = coinData.exchangeList.map(function(exchange, idx) {\r\n        if (idx !== coinData.exchangeList.length - 1) {\r\n          return <span key={exchange + idx + coin.symbol}>{exchange}, </span>;\r\n        } else {\r\n          return exchange;\r\n        }\r\n      });\r\n\r\n      coinData.exchangeList = <span>Also traded on: {exchangeListEl}</span>;\r\n    }\r\n\r\n    if (coinData.exchangeIds.length === 0) {\r\n      coinData.satoshiValue = Decimal(coinData.satoshiValue).div(Decimal(1000)).toNumber();\r\n      coinData.mSatoshi = Decimal(coinData.mSatoshi).div(Decimal(1000)).toNumber();\r\n      coinData.usdValue = Decimal(coinData.usdValue).div(Decimal(1000)).toNumber();\r\n      coinData.nUsd = Decimal(coinData.nUsd).div(Decimal(1000)).toNumber();\r\n      coinData.theory = true;\r\n      if (staleTimeout) {\r\n        coinData.usd24 = Decimal(Decimal(algorithms[coinData.algorithm]).times(Decimal(coinData.usdValue)).times(Decimal(staleTimeout)).toPrecision(8)).toNumber().noExponents();\r\n        if (parseFloat(coinData.btcPrice) === 0.00) {\r\n          coinData.usd24Raw = 0;\r\n        } else {\r\n          coinData.usd24Raw = Decimal(algorithms[coinData.algorithm]).times(Decimal(coinData.usdValue)).times(Decimal(staleTimeout)).toNumber()\r\n        }\r\n        coinData.btc24 = Decimal(Decimal(\r\n          Decimal(algorithms[coinData.algorithm]).times(\r\n            Decimal(coinData.satoshiValue).times(Decimal(Decimal(staleTimeout))))\r\n          ).times(Decimal('1e-8')\r\n        ).toPrecision(8)).toNumber().noExponents();\r\n        coinData.btc24Raw = Decimal(\r\n            Decimal(algorithms[coinData.algorithm]).times(Decimal(coinData.satoshiValue)).times(Decimal(staleTimeout)).times(Decimal('1e-8'))\r\n          ).toNumber();\r\n      }\r\n    }\r\n\r\n    if (staleTimeout) {\r\n      //console.log('staleTimeout',staleTimeout);\r\n      var st = staleTimeout;\r\n      if (st === 1200) {\r\n        st = st * 2;\r\n      }\r\n      if (coinData.logUpdatedRaw) {\r\n        // console.log('new Date(coinData.logUpdatedRaw).getTime()',new Date(coinData.logUpdatedRaw).getTime());\r\n        // console.log('new Date().getTime() - staleTimeout * 50  ',new Date().getTime() - st * 1000 * 1.25);\r\n\r\n        // console.log('                                          ',new Date(coinData.logUpdatedRaw).getTime() - (new Date().getTime() - st * 1000 * 1.25))\r\n        coinData.isStale =  new Date(coinData.logUpdatedRaw).getTime() < new Date().getTime() - st * 1000 * 1.25;\r\n      } else {\r\n        coinData.isStale =  new Date(coinData.updatedRaw).getTime() < new Date().getTime() - st * 1000 * 1.25;\r\n      }\r\n      // coinData.usd24 = Decimal(algorithms[coinData.algorithm]).times(Decimal(coinData.usdValue)).times(Decimal(staleTimeout)).toNumber().toFixed(8);\r\n      // if (parseFloat(coinData.btcPrice) === 0.00) {\r\n      //   coinData.usd24Raw = 0;\r\n      // } else {\r\n      //   coinData.usd24Raw = Decimal(algorithms[coinData.algorithm]).times(Decimal(coinData.usdValue)).times(Decimal(staleTimeout)).toNumber()\r\n      // }\r\n      // coinData.btc24 = Decimal(\r\n      //   Decimal(algorithms[coinData.algorithm]).times(\r\n      //     Decimal(coinData.satoshiValue).times(Decimal(Decimal(staleTimeout))))\r\n      //   ).times(Decimal('1e-8')\r\n      // ).toNumber().toFixed(8);\r\n      // coinData.btc24Raw = Decimal(\r\n      //     Decimal(algorithms[coinData.algorithm]).times(Decimal(coinData.satoshiValue)).times(Decimal(staleTimeout)).times(Decimal('1e-8'))\r\n      //   ).toNumber();\r\n      coinData.usdHuman = moment.duration(staleTimeout * 1000).humanize();\r\n      coinData.hash = this.millify(algorithms[coinData.algorithm], 3);\r\n      //console.log(algorithms[coinData.algorithm], coinData.coinValue, staleTimeout);\r\n      coinData.coinsEarnedRaw = Decimal(algorithms[coinData.algorithm]).times(Decimal(coinData.coinValue)).times(Decimal(staleTimeout));\r\n      // coinData.coinsEarnedRaw = Decimal(algorithms[coinData.algorithm]).times(Decimal(staleTimeout)).div(coinData.networkHashrateRaw) * 192.93;\r\n      coinData.coinsEarned = this.millify(coinData.coinsEarnedRaw, 3);\r\n      if(!coinData.theory){\r\n        coinData.btc24Raw = Decimal(coinData.coinsEarnedRaw).times(Decimal(coinData.pairInSatoshi)).toString();\r\n        coinData.btc24 = Decimal(coinData.btc24Raw).times('1e-8').toDecimalPlaces(12, Decimal.ROUND_UP).toNumber().noExponents();\r\n        coinData.usd24Raw = Decimal(coinData.coinsEarnedRaw).times(Decimal(coinData.usdPrice)).toString();\r\n        coinData.usd24 = Decimal(coinData.usd24Raw).times('1e8').toDecimalPlaces(12, Decimal.ROUND_UP).toNumber().noExponents();\r\n      }\r\n    }\r\n\r\n    return coinData;\r\n  }\r\n\r\n  roundStr(number, decimals) {\r\n    if (number === 0) {\r\n      return \"0\";\r\n    } else {\r\n      var roundSF = decimals - Math.floor(Math.log10(number));\r\n      return String(Math.round(number * 10 ** roundSF) / 10 ** roundSF);\r\n    }\r\n  }\r\n\r\n  millify(n, decimals) {\r\n    var millnames = [\"\", \"K\", \"M\", \"G\", \"T\", \"P\"];\r\n    if (n === 0) {\r\n      return \"0\";\r\n    } else {\r\n      var indicator = 0;\r\n      if (n !== 0) {\r\n        indicator = Math.log10(Math.abs(n)) / 3;\r\n      }\r\n      var millidx = Math.max(\r\n        0,\r\n        Math.min(millnames.length - 1, Math.floor(indicator))\r\n      );\r\n      return this.roundStr(n / 10 ** (3 * millidx), decimals) + millnames[millidx];\r\n    }\r\n  }\r\n\r\n  sortByProfit(coins, order, algorithms, staleTimeout) {\r\n    coins.sort(function(coinA, coinB) {\r\n      return Decimal(coinB.btc24Raw).minus(Decimal(coinA.btc24Raw)).toNumber();\r\n    });\r\n\r\n    return order ? coins : coins.reverse();\r\n  }\r\n\r\n  sortByHashrate(coins, order) {\r\n    coins.sort(function(a, b) {\r\n      return Decimal(b.networkHashrateRaw).minus(Decimal(a.networkHashrateRaw));\r\n    });\r\n\r\n    return order ? coins : coins.reverse();\r\n  }\r\n\r\n  sortByCoins(coins, order, algorithms, staleTimeout) {\r\n    coins.sort(function(coinA, coinB) {\r\n      return Decimal(coinB.coinsEarnedRaw).minus(Decimal(coinA.coinsEarnedRaw));\r\n    });\r\n\r\n    return order ? coins : coins.reverse();\r\n  }\r\n\r\n  sortByNewest(coins, order, algorithms, staleTimeout) {\r\n    coins.sort(function(coinA, coinB) {\r\n      return coinB.created - coinA.created;\r\n    });\r\n\r\n    return order ? coins : coins.reverse();\r\n  }\r\n}\r\n\r\nconst instance = new Utils();\r\nexport default instance;\r\n"],"sourceRoot":""}